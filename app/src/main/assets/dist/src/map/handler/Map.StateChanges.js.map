{"version":3,"file":"Map.StateChanges.js","sourceRoot":"","sources":["../../../../../../../../../browser/src/map/handler/Map.StateChanges.js"],"names":[],"mappings":"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","sourcesContent":["/* -*- js-indent-level: 8 -*- */\n/*\n * L.Map.StateChanges stores the state changes commands coming from core\n * LOK_CALLBACK_STATE_CHANGED callback\n */\n/* global $ */\n/*eslint no-extend-native:0*/\nL.Map.mergeOptions({\n\tstateChangeHandler: true\n});\n\nL.Map.StateChangeHandler = L.Handler.extend({\n\n\tinitialize: function (map) {\n\t\tthis._map = map;\n\t\t// Contains the items for which state will be tracked\n\t\t// Stores the last received value from core ('true', 'false', 'enabled', 'disabled')\n\t\tthis._items = {};\n\t},\n\n\taddHooks: function () {\n\t\tthis._map.on('commandstatechanged', this._onStateChanged, this);\n\t},\n\n\tremoveHooks: function () {\n\t\tthis._map.off('commandstatechanged', this._onStateChanged, this);\n\t},\n\n\t_onStateChanged: function(e) {\n\t\tvar slideMasterPageItem = this._map['stateChangeHandler'].getItemValue('.uno:SlideMasterPage');\n\t\tvar state;\n\n\t\tif (typeof (e.state) == 'object') {\n\t\t\tstate = e.state;\n\t\t} else if (typeof (e.state) == 'string') {\n\t\t\tvar index = e.state.indexOf('{');\n\t\t\tstate = index !== -1 ? JSON.parse(e.state.substring(index)) : e.state;\n\t\t}\n\n\t\tthis._items[e.commandName] = state;\n\t\tif (e.commandName === '.uno:CurrentTrackedChangeId') {\n\t\t\tvar redlineId = 'change-' + state;\n\t\t\tthis._map._docLayer._annotations.selectById(redlineId);\n\t\t}\n\n\t\tif (e.commandName === '.uno:SlideMasterPage') {\n\t\t\tthis._map._docLayer._masterPageChanged = true;\n\t\t\t// clear the old tiles because they are saved in the same place\n\t\t\t// since the part no will be the same for both views and it will think it is cached\n\t\t\tthis._map._docLayer._onMessage('invalidatetiles: EMPTY', null);\n\t\t}\n\n\t\tif (e.commandName === '.uno:FormatPaintbrush') {\n\t\t\tif (state === 'true')\n\t\t\t\t$('.leaflet-pane.leaflet-map-pane').addClass('bucket-cursor');\n\t\t\telse\n\t\t\t\t$('.leaflet-pane.leaflet-map-pane').removeClass('bucket-cursor');\n\t\t}\n\n\t\t$('#document-container').removeClass('slide-master-mode');\n\t\t$('#document-container').addClass('slide-normal-mode');\n\t\tif (slideMasterPageItem) {\n\t\t\t$('#document-container').removeClass('slide-normal-mode');\n\t\t\t$('#document-container').addClass('slide-master-mode');\n\t\t}\n\t\tif (!slideMasterPageItem || slideMasterPageItem == 'false' || slideMasterPageItem == 'undefined') {\n\t\t\t$('#document-container').removeClass('slide-master-mode');\n\t\t\t$('#document-container').addClass('slide-normal-mode');\n\t\t}\n\t},\n\n\tgetItems: function() {\n\t\treturn this._items;\n\t},\n\n\tgetItemValue: function(unoCmd) {\n\t\tif (unoCmd && unoCmd.substring(0, 5) !== '.uno:') {\n\t\t\tunoCmd = '.uno:' + unoCmd;\n\t\t}\n\n\t\treturn this._items[unoCmd];\n\t},\n\n\tsetItemValue: function(unoCmd, value) {\n\t\tif (unoCmd && unoCmd.substring(0, 5) !== '.uno:') {\n\t\t\tunoCmd = '.uno:' + unoCmd;\n\t\t}\n\n\t\tthis._items[unoCmd] = value;\n\t}\n});\n\nL.Map.addInitHook('addHandler', 'stateChangeHandler', L.Map.StateChangeHandler);\n"]}