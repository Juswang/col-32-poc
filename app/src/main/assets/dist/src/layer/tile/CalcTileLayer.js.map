{"version":3,"file":"CalcTileLayer.js","sourceRoot":"","sources":["../../../../../../../../../browser/src/layer/tile/CalcTileLayer.js"],"names":[],"mappings":"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","sourcesContent":["/* -*- js-indent-level: 8 -*- */\n/*\n * Calc tile layer is used to display a spreadsheet document\n */\n\n/* global app */\n\nL.CalcTileLayer = L.CanvasTileLayer.extend({\n\toptions: {\n\t\t// TODO: sync these automatically from SAL_LOK_OPTIONS\n\t\tsheetGeometryDataEnabled: true,\n\t\tprintTwipsMsgsEnabled: true,\n\t\tsyncSplits: true, // if false, the splits/freezes are not synced with other users viewing the same sheet.\n\t},\n\n\ttwipsToHMM: function (twips) {\n\t\treturn (twips * 127 + 36) / 72;\n\t},\n\n\tnewAnnotation: function (comment) {\n\t\tvar commentListSection = app.sectionContainer.getSectionWithName(L.CSections.CommentList.name);\n\t\tif (!commentListSection)\n\t\t\treturn;\n\n\t\tvar commentList = commentListSection.sectionProperties.commentList;\n\t\tvar comment = null;\n\n\t\tfor (var i = 0; i < commentList.length; i++) {\n\t\t\tif (this._cellCursorTwips.contains(commentList[i].sectionProperties.data.cellPos)) {\n\t\t\t\tif (commentList[i].tab == this._selectedPart) {\n\t\t\t\t\tcomment = commentList[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!comment) {\n\t\t\tvar newComment = {\n\t\t\t\tcellPos: app.file.calc.cellCursor.rectangle.twips.slice(), // Copy the array.\n\t\t\t\tanchorPos: app.file.calc.cellCursor.rectangle.twips.slice(), // Copy the array.\n\t\t\t\tid: 'new',\n\t\t\t\ttab: this._selectedPart,\n\t\t\t\tdateTime: new Date().toDateString(),\n\t\t\t\tauthor: this._map.getViewName(this._viewId)\n\t\t\t};\n\t\t\tcomment = commentListSection.add(newComment);\n\t\t\tcomment.show();\n\t\t}\n\t\tcommentListSection.modify(comment);\n\t\tcomment.focus();\n\t},\n\n\tbeforeAdd: function (map) {\n\t\tmap._isCursorVisible = false;\n\t\tmap._addZoomLimit(this);\n\t\tmap.on('zoomend', this._onZoomRowColumns, this);\n\t\tmap.on('updateparts', this._onUpdateParts, this);\n\t\tmap.on('splitposchanged', this.setSplitCellFromPos, this);\n\t\tmap.on('commandstatechanged', this._onCommandStateChanged, this);\n\t\tmap.uiManager.initializeSpecializedUI('spreadsheet');\n\t},\n\n\tonAdd: function (map) {\n\t\tmap.addControl(L.control.tabs());\n\t\tL.CanvasTileLayer.prototype.onAdd.call(this, map);\n\n\t\tmap.on('resize', function () {\n\t\t\tif (this.isCursorVisible()) {\n\t\t\t\tthis._onUpdateCursor(true /* scroll */);\n\t\t\t}\n\t\t}.bind(this));\n\n\t\t// This is called when page size is increased\n\t\t// the content of the cells that become visible may stay empty\n\t\t// unless we have the tiles in the cache already\n\t\t// This will only fetch the tiles which are invalid or does not exist\n\t\tmap.on('sizeincreased', function() {\n\t\t\tthis._update();\n\t\t}.bind(this));\n\n\t\tapp.sectionContainer.addSection(new app.definitions.AutoFillMarkerSection());\n\n\t\tthis.insertMode = false;\n\t\tthis._cellSelections = Array(0);\n\t\tthis._cellCursorXY = {x: -1, y: -1};\n\t\tthis._gotFirstCellCursor = false;\n\t\tthis.requestCellCursor();\n\t},\n\n\tisHiddenPart: function (part) {\n\t\tif (!this._hiddenParts)\n\t\t\treturn false;\n\t\treturn this._hiddenParts.indexOf(part) !== -1;\n\t},\n\n\thiddenParts: function () {\n\t\tif (!this._hiddenParts)\n\t\t\treturn 0;\n\t\treturn this._hiddenParts.length;\n\t},\n\n\thasAnyHiddenPart: function () {\n\t\tif (!this._hiddenParts)\n\t\t\treturn false;\n\t\treturn this.hiddenParts() !== 0;\n\t},\n\n\t_onUpdateParts: function (e) {\n\t\tif (typeof this._prevSelectedPart === 'number' && !e.source) {\n\t\t\tthis.refreshViewData(undefined, false /* compatDataSrcOnly */, true /* sheetGeometryChanged */);\n\t\t\tthis._switchSplitPanesContext();\n\t\t}\n\t},\n\n\t_onMessage: function (textMsg, img) {\n\t\tif (textMsg.startsWith('invalidateheader: column')) {\n\t\t\tthis.refreshViewData({x: this._map._getTopLeftPoint().x, y: 0,\n\t\t\t\toffset: {x: undefined, y: 0}}, true /* compatDataSrcOnly */);\n\t\t\tapp.socket.sendMessage('commandvalues command=.uno:ViewAnnotationsPosition');\n\t\t} else if (textMsg.startsWith('invalidateheader: row')) {\n\t\t\tthis.refreshViewData({x: 0, y: this._map._getTopLeftPoint().y,\n\t\t\t\toffset: {x: 0, y: undefined}}, true /* compatDataSrcOnly */);\n\t\t\tapp.socket.sendMessage('commandvalues command=.uno:ViewAnnotationsPosition');\n\t\t} else if (textMsg.startsWith('invalidateheader: all')) {\n\t\t\tthis.refreshViewData({x: this._map._getTopLeftPoint().x, y: this._map._getTopLeftPoint().y,\n\t\t\t\toffset: {x: undefined, y: undefined}}, true /* compatDataSrcOnly */);\n\t\t\tapp.socket.sendMessage('commandvalues command=.uno:ViewAnnotationsPosition');\n\t\t} else if (this.options.sheetGeometryDataEnabled &&\n\t\t\t\ttextMsg.startsWith('invalidatesheetgeometry:')) {\n\t\t\tvar params = textMsg.substring('invalidatesheetgeometry:'.length).trim().split(' ');\n\t\t\tvar flags = {};\n\t\t\tparams.forEach(function (param) {\n\t\t\t\tflags[param] = true;\n\t\t\t});\n\t\t\tthis.requestSheetGeometryData(flags);\n\t\t} else {\n\t\t\tL.CanvasTileLayer.prototype._onMessage.call(this, textMsg, img);\n\t\t}\n\t},\n\n\t_onInvalidateTilesMsg: function (textMsg) {\n\t\tvar command = app.socket.parseServerCmd(textMsg);\n\t\tif (command.x === undefined || command.y === undefined || command.part === undefined) {\n\t\t\tvar strTwips = textMsg.match(/\\d+/g);\n\t\t\tcommand.x = parseInt(strTwips[0]);\n\t\t\tcommand.y = parseInt(strTwips[1]);\n\t\t\tcommand.width = parseInt(strTwips[2]);\n\t\t\tcommand.height = parseInt(strTwips[3]);\n\t\t\tcommand.part = this._selectedPart;\n\t\t}\n\t\tvar topLeftTwips = new L.Point(command.x, command.y);\n\t\tvar offset = new L.Point(command.width, command.height);\n\t\tvar bottomRightTwips = topLeftTwips.add(offset);\n\t\tif (this._debug) {\n\t\t\tthis._debugAddInvalidationRectangle(topLeftTwips, bottomRightTwips, textMsg);\n\t\t}\n\n\t\tvar invalidBounds = new L.Bounds(topLeftTwips, bottomRightTwips);\n\t\tvar visibleArea, visiblePaneAreas;\n\t\tif (this._splitPanesContext) {\n\t\t\tvisiblePaneAreas = this._splitPanesContext.getTwipsBoundList();\n\t\t}\n\t\telse {\n\t\t\tvar visibleTopLeft = this._latLngToTwips(this._map.getBounds().getNorthWest());\n\t\t\tvar visibleBottomRight = this._latLngToTwips(this._map.getBounds().getSouthEast());\n\t\t\tvisibleArea = new L.Bounds(visibleTopLeft, visibleBottomRight);\n\t\t}\n\n\t\tvar needsNewTiles = false;\n\t\tfor (var key in this._tiles) {\n\t\t\tvar coords = this._tiles[key].coords;\n\t\t\tvar bounds = this._coordsToTileBounds(coords);\n\t\t\tif (coords.part === command.part && invalidBounds.intersects(bounds)) {\n\t\t\t\tif (this._tiles[key]._invalidCount) {\n\t\t\t\t\tthis._tiles[key]._invalidCount += 1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._tiles[key]._invalidCount = 1;\n\t\t\t\t}\n\t\t\t\tvar intersectsVisible = visibleArea ? visibleArea.intersects(bounds) : bounds.intersectsAny(visiblePaneAreas);\n\t\t\t\tif (intersectsVisible) {\n\t\t\t\t\tneedsNewTiles = true;\n\t\t\t\t\tif (this._debug) {\n\t\t\t\t\t\tthis._debugAddInvalidationData(this._tiles[key]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// tile outside of the visible area, just remove it\n\t\t\t\t\tthis._removeTile(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (needsNewTiles && command.part === this._selectedPart && this._debug)\n\t\t{\n\t\t\tthis._debugAddInvalidationMessage(textMsg);\n\t\t}\n\n\t\tfor (key in this._tileCache) {\n\t\t\t// compute the rectangle that each tile covers in the document based\n\t\t\t// on the zoom level\n\t\t\tcoords = this._keyToTileCoords(key);\n\t\t\tif (coords.part !== command.part) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tbounds = this._coordsToTileBounds(coords);\n\t\t\tif (invalidBounds.intersects(bounds)) {\n\t\t\t\tdelete this._tileCache[key];\n\t\t\t}\n\t\t}\n\n\t\tthis._previewInvalidations.push(invalidBounds);\n\t\t// 1s after the last invalidation, update the preview\n\t\tclearTimeout(this._previewInvalidator);\n\t\tthis._previewInvalidator = setTimeout(L.bind(this._invalidatePreviews, this), this.options.previewInvalidationTimeout);\n\t},\n\n\t_onSetPartMsg: function (textMsg) {\n\t\tvar part = parseInt(textMsg.match(/\\d+/g)[0]);\n\t\tif (!this.isHiddenPart(part)) {\n\t\t\tthis.refreshViewData(undefined, true /* compatDataSrcOnly */, false /* sheetGeometryChanged */);\n\t\t\tthis._replayPrintTwipsMsgAllViews('cellviewcursor');\n\t\t\tthis._replayPrintTwipsMsgAllViews('textviewselection');\n\t\t\t// Hide previous tab's shown comment (if any).\n\t\t\tvar section = app.sectionContainer.getSectionWithName(L.CSections.CommentList.name);\n\t\t\tif (section)\n\t\t\t\tsection.hideAllComments();\n\t\t}\n\t},\n\n\t_onZoomRowColumns: function () {\n\t\tthis._sendClientZoom();\n\t\tif (this.sheetGeometry) {\n\t\t\tthis.sheetGeometry.setTileGeometryData(this._tileWidthTwips, this._tileHeightTwips,\n\t\t\t\tthis._tileSize);\n\t\t}\n\t\tthis._restrictDocumentSize();\n\t\tthis.setSplitPosFromCell();\n\t\tthis._map.fire('zoomchanged');\n\t\tthis.refreshViewData();\n\t\tthis._replayPrintTwipsMsgs();\n\t\tapp.socket.sendMessage('commandvalues command=.uno:ViewAnnotationsPosition');\n\t},\n\n\t_restrictDocumentSize: function () {\n\n\t\tif (!this.sheetGeometry) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar maxDocSize = this.sheetGeometry.getSize('tiletwips');\n\t\tvar newDocWidth = Math.min(maxDocSize.x, this._docWidthTwips);\n\t\tvar newDocHeight = Math.min(maxDocSize.y, this._docHeightTwips);\n\n\t\tvar shouldRestrict = (newDocWidth !== this._docWidthTwips ||\n\t\t\t\tnewDocHeight !== this._docHeightTwips);\n\n\t\tif (!shouldRestrict) {\n\t\t\treturn;\n\t\t}\n\n\t\t// When there will be a latlng conversion, we should use CSS pixels.\n\t\tvar newSizePx = this._twipsToPixels(new L.Point(newDocWidth, newDocHeight));\n\n\t\tvar topLeft = this._map.unproject(new L.Point(0, 0));\n\t\tvar bottomRight = this._map.unproject(newSizePx);\n\n\t\tthis._docPixelSize = newSizePx.clone();\n\t\tthis._docWidthTwips = newDocWidth;\n\t\tthis._docHeightTwips = newDocHeight;\n\t\tapp.file.size.twips = [newDocWidth, newDocHeight];\n\t\tapp.file.size.pixels = [Math.round(this._tileSize * (this._docWidthTwips / this._tileWidthTwips)), Math.round(this._tileSize * (this._docHeightTwips / this._tileHeightTwips))];\n\t\tapp.view.size.pixels = app.file.size.pixels.slice();\n\n\t\tthis._map.setMaxBounds(new L.LatLngBounds(topLeft, bottomRight));\n\n\t\tthis._map.fire('scrolllimits', newSizePx.clone());\n\t},\n\n\t_getCursorPosSize: function () {\n\t\tvar x = -1, y = -1;\n\t\tif (this._cellCursorXY) {\n\t\t\tx = this._cellCursorXY.x + 1;\n\t\t\ty = this._cellCursorXY.y + 1;\n\t\t}\n\t\tvar size = new L.Point(0, 0);\n\t\tif (this._cellCursor && !this._isEmptyRectangle(this._cellCursor)) {\n\t\t\tsize = this._cellCursorTwips.getSize();\n\t\t}\n\n\t\treturn { curX: x, curY: y, width: size.x, height: size.y };\n\t},\n\n\t_getSelectionHeaderData: function() {\n\t\tif (this._cellCSelections.empty())\n\t\t\treturn { hasSelection: false };\n\n\t\tvar bounds = this._cellCSelections.getBounds();\n\t\twindow.app.console.assert(bounds.isValid(), 'Non empty selection should have valid bounds');\n\t\treturn {\n\t\t\thasSelection: true,\n\t\t\tstart: this._corePixelsToTwips(bounds.min).add([1, 1]),\n\t\t\tend: this._corePixelsToTwips(bounds.max).subtract([1, 1]),\n\t\t};\n\t},\n\n\t_onStatusMsg: function (textMsg) {\n\t\tconsole.log('DEBUG: onStatusMsg: ' + textMsg);\n\t\tvar command = app.socket.parseServerCmd(textMsg);\n\t\tif (command.width && command.height && this._documentInfo !== textMsg) {\n\t\t\tvar firstSelectedPart = (typeof this._selectedPart !== 'number');\n\t\t\tthis._docWidthTwips = command.width;\n\t\t\tthis._docHeightTwips = command.height;\n\t\t\tapp.file.size.twips = [this._docWidthTwips, this._docHeightTwips];\n\t\t\tapp.file.size.pixels = [Math.round(this._tileSize * (this._docWidthTwips / this._tileWidthTwips)), Math.round(this._tileSize * (this._docHeightTwips / this._tileHeightTwips))];\n\t\t\tapp.view.size.pixels = app.file.size.pixels.slice();\n\t\t\tthis._docType = command.type;\n\t\t\tthis._parts = command.parts;\n\t\t\tthis._selectedPart = command.selectedPart;\n\t\t\tif (this.sheetGeometry && this._selectedPart != this.sheetGeometry.getPart()) {\n\t\t\t\t// Core initiated sheet switch, need to get full sheetGeometry data for the selected sheet.\n\t\t\t\tthis.requestSheetGeometryData();\n\t\t\t}\n\t\t\tthis._viewId = parseInt(command.viewid);\n\t\t\tvar mapSize = this._map.getSize();\n\t\t\tvar sizePx = this._twipsToPixels(new L.Point(this._docWidthTwips, this._docHeightTwips));\n\t\t\tvar width = sizePx.x;\n\t\t\tvar height = sizePx.y;\n\t\t\tif (width < mapSize.x || height < mapSize.y) {\n\t\t\t\twidth = Math.max(width, mapSize.x);\n\t\t\t\theight = Math.max(height, mapSize.y);\n\t\t\t\tvar topLeft = this._map.unproject(new L.Point(0, 0));\n\t\t\t\tvar bottomRight = this._map.unproject(new L.Point(width, height));\n\t\t\t\tthis._map.setMaxBounds(new L.LatLngBounds(topLeft, bottomRight));\n\t\t\t\tthis._docPixelSize = {x: width, y: height};\n\t\t\t\tthis._map.fire('scrolllimits', {x: width, y: height});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._updateMaxBounds(true);\n\t\t\t}\n\t\t\tthis._hiddenParts = command.hiddenparts || [];\n\t\t\tthis._rtlParts = command.rtlParts || [];\n\t\t\tconsole.log('DEBUG: rtlParts = ' + this._rtlParts);\n\t\t\tthis._documentInfo = textMsg;\n\t\t\tvar partNames = textMsg.match(/[^\\r\\n]+/g);\n\t\t\t// only get the last matches\n\t\t\tthis._partNames = partNames.slice(partNames.length - this._parts);\n\t\t\tthis._map.fire('updateparts', {\n\t\t\t\tselectedPart: this._selectedPart,\n\t\t\t\tparts: this._parts,\n\t\t\t\tdocType: this._docType,\n\t\t\t\tpartNames: this._partNames,\n\t\t\t\thiddenParts: this._hiddenParts,\n\t\t\t\tsource: 'status'\n\t\t\t});\n\t\t\tthis._resetPreFetching(true);\n\t\t\tthis._update();\n\t\t\tif (firstSelectedPart) {\n\t\t\t\tthis._switchSplitPanesContext();\n\t\t\t}\n\t\t}\n\t},\n\n\t// This initiates a selective repainting of row/col headers and\n\t// gridlines based on the settings of coordinatesData.offset. This\n\t// should be called whenever the view area changes (scrolling, panning,\n\t// zooming, cursor moving out of view-area etc.).  Depending on the\n\t// active sheet geometry data-source, it may ask core to send current\n\t// view area's data or the global data on geometry changes.\n\trefreshViewData: function (coordinatesData, compatDataSrcOnly, sheetGeometryChanged) {\n\n\t\tif (this.options.sheetGeometryDataEnabled && compatDataSrcOnly) {\n\t\t\treturn;\n\t\t}\n\t\t// There are places that call this function with no arguments to indicate that the\n\t\t// command arguments should be the current map area coordinates.\n\t\tif (typeof coordinatesData != 'object') {\n\t\t\tcoordinatesData = {};\n\t\t}\n\n\t\tvar offset = coordinatesData.offset || {};\n\n\t\tvar topLeftPoint = new L.Point(coordinatesData.x, coordinatesData.y);\n\t\tvar sizePx = this._map.getSize();\n\n\t\tif (topLeftPoint.x === undefined) {\n\t\t\ttopLeftPoint.x = this._map._getTopLeftPoint().x;\n\t\t}\n\t\tif (topLeftPoint.y === undefined) {\n\t\t\ttopLeftPoint.y = this._map._getTopLeftPoint().y;\n\t\t}\n\n\t\tvar updateRows = true;\n\t\tvar updateCols = true;\n\n\t\tif (offset.x === 0) {\n\t\t\tupdateCols = false;\n\t\t\tif (!this.options.sheetGeometryDataEnabled) {\n\t\t\t\ttopLeftPoint.x = -1;\n\t\t\t\tsizePx.x = 0;\n\t\t\t}\n\t\t}\n\t\tif (offset.y === 0) {\n\t\t\tupdateRows = false;\n\t\t\tif (!this.options.sheetGeometryDataEnabled) {\n\t\t\t\ttopLeftPoint.y = -1;\n\t\t\t\tsizePx.y = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar pos = this._pixelsToTwips(topLeftPoint);\n\t\tvar size = this._pixelsToTwips(sizePx);\n\n\t\tif (!this.options.sheetGeometryDataEnabled) {\n\t\t\tthis.requestViewRowColumnData(pos, size);\n\t\t\treturn;\n\t\t}\n\n\t\tif (sheetGeometryChanged || !this.sheetGeometry) {\n\t\t\tthis.requestSheetGeometryData(\n\t\t\t\t{columns: updateCols, rows: updateRows});\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.sheetGeometry) {\n\t\t\tthis.sheetGeometry.setViewArea(pos, size);\n\t\t\tthis._updateHeadersGridLines(undefined, updateCols, updateRows);\n\t\t}\n\t},\n\n\t// This send .uno:ViewRowColumnHeaders command to core with the new view coordinates (tile-twips).\n\trequestViewRowColumnData: function (pos, size) {\n\n\t\tvar payload = 'commandvalues command=.uno:ViewRowColumnHeaders?x=' + Math.round(pos.x) + '&y=' + Math.round(pos.y) +\n\t\t\t'&width=' + Math.round(size.x) + '&height=' + Math.round(size.y);\n\n\t\tapp.socket.sendMessage(payload);\n\t},\n\n\t// sends the .uno:SheetGeometryData command optionally with arguments.\n\trequestSheetGeometryData: function (flags) {\n\t\tif (!this.sheetGeometry) {\n\t\t\t// Suppress multiple requests at document load, till we get a response.\n\t\t\tif (this._sheetGeomFirstWait === true) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._sheetGeomFirstWait = true;\n\t\t}\n\t\tvar unoCmd = '.uno:SheetGeometryData';\n\t\tvar haveArgs = (typeof flags == 'object' &&\n\t\t\t(flags.columns === true || flags.rows === true || flags.all === true));\n\t\tvar payload = 'commandvalues command=' + unoCmd;\n\n\t\tif (haveArgs) {\n\t\t\tvar argList = [];\n\t\t\tvar both = (flags.all === true);\n\t\t\tif (both || flags.columns === true) {\n\t\t\t\targList.push('columns=1');\n\t\t\t}\n\t\t\tif (both || flags.rows === true) {\n\t\t\t\targList.push('rows=1');\n\t\t\t}\n\n\t\t\tvar dataTypeFlagNames = ['sizes', 'hidden', 'filtered', 'groups'];\n\t\t\tvar dataTypesPresent = false;\n\t\t\tdataTypeFlagNames.forEach(function (name) {\n\t\t\t\tif (flags[name] === true) {\n\t\t\t\t\targList.push(name + '=1');\n\t\t\t\t\tdataTypesPresent = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!dataTypesPresent) {\n\t\t\t\tdataTypeFlagNames.forEach(function (name) {\n\t\t\t\t\targList.push(name + '=1');\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tpayload += '?' + argList.join('&');\n\t\t}\n\n\t\tapp.socket.sendMessage(payload);\n\t},\n\n\t// Sends a notification to the row/col header and gridline controls that\n\t// they need repainting.\n\t// viewAreaData is the parsed .uno:ViewRowColumnHeaders JSON if that source is used.\n\t// else it should be undefined.\n\t_updateHeadersGridLines: function (viewAreaData, updateCols, updateRows) {\n\t\tthis._map.fire('viewrowcolumnheaders', {\n\t\t\tdata: viewAreaData,\n\t\t\tupdaterows: updateRows,\n\t\t\tupdatecolumns: updateCols,\n\t\t\tcursor: this._getCursorPosSize(),\n\t\t\tselection: this._getSelectionHeaderData(),\n\t\t\tconverter: this._twipsToCorePixels,\n\t\t\tcontext: this\n\t\t});\n\t},\n\n\t_addRemoveGroupSections: function () {\n\t\t// If there are row and column groups at the same time, add CornerGroup section.\n\t\tif (this.sheetGeometry._rows._outlines._outlines.length > 0 && this.sheetGeometry._columns._outlines._outlines.length > 0) {\n\t\t\tif (!this._painter._sectionContainer.doesSectionExist(L.CSections.CornerGroup.name))\n\t\t\t\tthis._painter._sectionContainer.addSection(L.control.cornerGroup());\n\t\t}\n\t\telse { // If not, remove CornerGroup section.\n\t\t\tthis._painter._sectionContainer.removeSection(L.CSections.CornerGroup.name);\n\t\t}\n\n\t\t// If there are row groups, add RowGroup section.\n\t\tif (this.sheetGeometry._rows._outlines._outlines.length > 0) {\n\t\t\tif (!this._painter._sectionContainer.doesSectionExist(L.CSections.RowGroup.name))\n\t\t\t\tthis._painter._sectionContainer.addSection(L.control.rowGroup());\n\t\t}\n\t\telse { // If not, remove RowGroup section.\n\t\t\tthis._painter._sectionContainer.removeSection(L.CSections.RowGroup.name);\n\t\t}\n\n\t\t// If there are column groups, add ColumnGroup section.\n\t\tif (this.sheetGeometry._columns._outlines._outlines.length > 0) {\n\t\t\tif (!this._painter._sectionContainer.doesSectionExist(L.CSections.ColumnGroup.name)) {\n\t\t\t\tthis._painter._sectionContainer.addSection(L.control.columnGroup());\n\t\t\t\tthis._painter._sectionContainer.canvas.style.border = '1px solid darkgrey';\n\t\t\t}\n\t\t}\n\t\telse { // If not, remove ColumnGroup section.\n\t\t\tthis._painter._sectionContainer.removeSection(L.CSections.ColumnGroup.name);\n\t\t\tthis._painter._sectionContainer.canvas.style.border = '0px solid darkgrey';\n\t\t}\n\t},\n\n\t_adjustCanvasSectionsForLayoutChange: function () {\n\n\t\tvar sheetIsRTL = this._selectedPart in this._rtlParts;\n\t\tif (sheetIsRTL && this._layoutIsRTL !== true) {\n\t\t\tconsole.log('debug: in LTR -> RTL canvas section adjustments');\n\t\t\tvar sectionContainer = this._painter._sectionContainer;\n\n\t\t\tvar tilesSection = sectionContainer.getSectionWithName(L.CSections.Tiles.name);\n\t\t\tvar rowHeaderSection = sectionContainer.getSectionWithName(L.CSections.RowHeader.name);\n\t\t\tvar columnHeaderSection = sectionContainer.getSectionWithName(L.CSections.ColumnHeader.name);\n\t\t\tvar cornerHeaderSection = sectionContainer.getSectionWithName(L.CSections.CornerHeader.name);\n\t\t\tvar columnGroupSection = sectionContainer.getSectionWithName(L.CSections.ColumnGroup.name);\n\t\t\tvar rowGroupSection = sectionContainer.getSectionWithName(L.CSections.RowGroup.name);\n\t\t\tvar cornerGroupSection = sectionContainer.getSectionWithName(L.CSections.CornerGroup.name);\n\t\t\t// Scroll section covers the entire document area, and needs RTL adjustments internally.\n\n\t\t\tif (cornerGroupSection) {\n\t\t\t\tcornerGroupSection.anchor = ['top', 'right'];\n\t\t\t}\n\n\t\t\tif (rowGroupSection) {\n\t\t\t\trowGroupSection.anchor = [[L.CSections.CornerGroup.name, 'bottom', 'top'], 'right'];\n\t\t\t}\n\n\t\t\tif (columnGroupSection) {\n\t\t\t\tcolumnGroupSection.anchor = ['top', [L.CSections.CornerGroup.name, '-left', 'right']];\n\t\t\t}\n\n\t\t\tif (cornerHeaderSection)\n\t\t\t\tcornerHeaderSection.anchor = [[L.CSections.ColumnGroup.name, 'bottom', 'top'], [L.CSections.RowGroup.name, '-left', 'right']];\n\n\t\t\tif (rowHeaderSection)\n\t\t\t\trowHeaderSection.anchor = [[L.CSections.CornerHeader.name, 'bottom', 'top'], [L.CSections.RowGroup.name, '-left', 'right']];\n\n\t\t\tif (columnHeaderSection) {\n\t\t\t\tcolumnHeaderSection.anchor = [[L.CSections.ColumnGroup.name, 'bottom', 'top'], [L.CSections.CornerHeader.name, '-left', 'right']];\n\t\t\t\tcolumnHeaderSection.expand = ['left'];\n\t\t\t}\n\n\t\t\tif (tilesSection)\n\t\t\t\ttilesSection.anchor = [[L.CSections.ColumnHeader.name, 'bottom', 'top'], [L.CSections.RowHeader.name, '-left', 'right']];\n\n\t\t\tthis._layoutIsRTL = true;\n\n\t\t\tsectionContainer.reNewAllSections(true);\n\n\t\t} else if (!sheetIsRTL && this._layoutIsRTL === true) {\n\n\t\t\tconsole.log('debug: in RTL -> LTR canvas section adjustments');\n\t\t\tthis._layoutIsRTL = false;\n\t\t\tvar sectionContainer = this._painter._sectionContainer;\n\n\t\t\tvar tilesSection = sectionContainer.getSectionWithName(L.CSections.Tiles.name);\n\t\t\tvar rowHeaderSection = sectionContainer.getSectionWithName(L.CSections.RowHeader.name);\n\t\t\tvar columnHeaderSection = sectionContainer.getSectionWithName(L.CSections.ColumnHeader.name);\n\t\t\tvar cornerHeaderSection = sectionContainer.getSectionWithName(L.CSections.CornerHeader.name);\n\t\t\tvar columnGroupSection = sectionContainer.getSectionWithName(L.CSections.ColumnGroup.name);\n\t\t\tvar rowGroupSection = sectionContainer.getSectionWithName(L.CSections.RowGroup.name);\n\t\t\tvar cornerGroupSection = sectionContainer.getSectionWithName(L.CSections.CornerGroup.name);\n\n\t\t\tif (cornerGroupSection) {\n\t\t\t\tcornerGroupSection.anchor = ['top', 'left'];\n\t\t\t}\n\n\t\t\tif (rowGroupSection) {\n\t\t\t\trowGroupSection.anchor = [[L.CSections.CornerGroup.name, 'bottom', 'top'], 'left'];\n\t\t\t}\n\n\t\t\tif (columnGroupSection) {\n\t\t\t\tcolumnGroupSection.anchor = ['top', [L.CSections.CornerGroup.name, 'right', 'left']];\n\t\t\t}\n\n\t\t\tif (cornerHeaderSection)\n\t\t\t\tcornerHeaderSection.anchor = [[L.CSections.ColumnGroup.name, 'bottom', 'top'], [L.CSections.RowGroup.name, 'right', 'left']];\n\n\t\t\tif (rowHeaderSection)\n\t\t\t\trowHeaderSection.anchor = [[L.CSections.CornerHeader.name, 'bottom', 'top'], [L.CSections.RowGroup.name, 'right', 'left']];\n\n\t\t\tif (columnHeaderSection) {\n\t\t\t\tcolumnHeaderSection.anchor = [[L.CSections.ColumnGroup.name, 'bottom', 'top'], [L.CSections.CornerHeader.name, 'right', 'left']];\n\t\t\t\tcolumnHeaderSection.expand = ['right'];\n\t\t\t}\n\n\t\t\tif (tilesSection)\n\t\t\t\ttilesSection.anchor = [[L.CSections.ColumnHeader.name, 'bottom', 'top'], [L.CSections.RowHeader.name, 'right', 'left']];\n\n\t\t\tsectionContainer.reNewAllSections(true);\n\n\t\t}\n\t},\n\n\t_handleSheetGeometryDataMsg: function (jsonMsgObj) {\n\t\tif (!this.sheetGeometry) {\n\t\t\tthis._sheetGeomFirstWait = false;\n\t\t\tthis.sheetGeometry = new L.SheetGeometry(jsonMsgObj,\n\t\t\t\tthis._tileWidthTwips, this._tileHeightTwips,\n\t\t\t\tthis._tileSize, this._selectedPart);\n\n\t\t\tthis._painter._sectionContainer.addSection(L.control.cornerHeader());\n\t\t\tthis._painter._sectionContainer.addSection(L.control.rowHeader());\n\t\t\tthis._painter._sectionContainer.addSection(L.control.columnHeader());\n\t\t}\n\t\telse {\n\t\t\tthis.sheetGeometry.update(jsonMsgObj, /* checkCompleteness */ false, this._selectedPart);\n\t\t}\n\n\t\tthis._replayPrintTwipsMsgs();\n\n\t\tthis.sheetGeometry.setViewArea(this._pixelsToTwips(this._map._getTopLeftPoint()),\n\t\t\tthis._pixelsToTwips(this._map.getSize()));\n\n\t\tthis._addRemoveGroupSections();\n\n\t\tconsole.log('debug: got sheetGeometry: this._rtlParts = ' + this._rtlParts + ' this._selectedPart = ' + this._selectedPart);\n\n\t\tthis._adjustCanvasSectionsForLayoutChange();\n\n\t\tthis._updateHeadersGridLines(undefined, true /* updateCols */,\n\t\t\ttrue /* updateRows */);\n\n\t\tthis.dontSendSplitPosToCore = true;\n\t\tthis.setSplitPosFromCell();\n\t\tthis.dontSendSplitPosToCore = false;\n\n\t\tthis._syncTileContainerSize();\n\n\t\tthis._map.fire('sheetgeometrychanged');\n\t},\n\n\t// Calculates the split position in (core-pixels) from the split-cell.\n\tsetSplitPosFromCell: function (forceSplittersUpdate) {\n\t\tif (!this.sheetGeometry || !this._splitPanesContext) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._splitPanesContext.setSplitPosFromCell(forceSplittersUpdate);\n\t},\n\n\t// Calculates the split-cell from the split position in (core-pixels).\n\tsetSplitCellFromPos: function () {\n\n\t\tif (!this.sheetGeometry || !this._splitPanesContext) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._splitPanesContext.setSplitCellFromPos();\n\t},\n\n\t_switchSplitPanesContext: function () {\n\n\t\tif (!this.hasSplitPanesSupport()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._splitPaneCache) {\n\t\t\tthis._splitPaneCache = {};\n\t\t}\n\n\t\twindow.app.console.assert(typeof this._selectedPart === 'number', 'invalid selectedPart');\n\n\t\tvar spContext = this._splitPaneCache[this._selectedPart];\n\t\tif (!spContext) {\n\t\t\tspContext = new L.CalcSplitPanesContext(this);\n\t\t\tthis._splitPaneCache[this._selectedPart] = spContext;\n\t\t}\n\n\t\tthis._splitPanesContext = spContext;\n\t\tif (this.sheetGeometry) {\n\t\t\t// Force update of the splitter lines.\n\t\t\tthis.setSplitPosFromCell(true);\n\t\t}\n\t},\n\n\t_onRowColSelCount: function (state) {\n\t\tif (state.trim() !== '') {\n\t\t\tvar rowCount = parseInt(state.split(', ')[0].trim().split(' ')[0].replace(',', '').replace(',', ''));\n\t\t\tvar columnCount = parseInt(state.split(', ')[1].trim().split(' ')[0].replace(',', '').replace(',', ''));\n\t\t\tif (rowCount > 1000000)\n\t\t\t\tthis._map.wholeColumnSelected = true;\n\t\t\telse\n\t\t\t\tthis._map.wholeColumnSelected = false;\n\n\t\t\tif (columnCount === 1024)\n\t\t\t\tthis._map.wholeRowSelected = true;\n\t\t\telse\n\t\t\t\tthis._map.wholeRowSelected = false;\n\t\t}\n\t\telse {\n\t\t\tthis._map.wholeColumnSelected = false;\n\t\t\tthis._map.wholeRowSelected = false;\n\t\t}\n\t},\n\n\t_onCommandStateChanged: function (e) {\n\n\t\tif (e.commandName === '.uno:FreezePanesColumn') {\n\t\t\tthis._onSplitStateChanged(e, true /* isSplitCol */);\n\t\t}\n\t\telse if (e.commandName === '.uno:FreezePanesRow') {\n\t\t\tthis._onSplitStateChanged(e, false /* isSplitCol */);\n\t\t}\n\t\telse if (e.commandName === '.uno:RowColSelCount') {\n\t\t\t// We also call the function when state is empty, because row/column variables should be set.\n\t\t\tif (e.state.trim() === '' || e.state.startsWith('Selected'))\n\t\t\t\tthis._onRowColSelCount(e.state.replace('Selected:', '').replace('row', '').replace('column', '').replace('s', ''));\n\t\t}\n\t\telse if (e.commandName === '.uno:InsertMode') {\n\t\t\t/* If we get textselection message from core:\n\t\t\t\tWhen insertMode is active:  User is selecting some text.\n\t\t\t\tWhen insertMode is passive: User is selecting cells.\n\t\t\t*/\n\t\t\tthis.insertMode = e.state.trim() === '' ? false: true;\n\t\t}\n\t},\n\n\t_onSplitStateChanged: function (e, isSplitCol) {\n\t\tif (!this._splitPanesContext) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._splitCellState) {\n\t\t\tthis._splitCellState = new L.Point(-1, -1);\n\t\t}\n\n\t\tif (!e.state || e.state.length === 0) {\n\t\t\twindow.app.console.warn('Empty argument for ' + e.commandName);\n\t\t\treturn;\n\t\t}\n\n\t\tvar newSplitIndex = Math.floor(parseInt(e.state));\n\t\twindow.app.console.assert(!isNaN(newSplitIndex) && newSplitIndex >= 0, 'invalid argument for ' + e.commandName);\n\n\t\t// This stores the current split-cell state of core, so this should not be modified.\n\t\tthis._splitCellState[isSplitCol ? 'x' : 'y'] = newSplitIndex;\n\n\t\tif (!this.options.syncSplits) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar changed = isSplitCol ? this._splitPanesContext.setSplitCol(newSplitIndex) :\n\t\t\tthis._splitPanesContext.setSplitRow(newSplitIndex);\n\n\t\tif (changed) {\n\t\t\tthis.setSplitPosFromCell();\n\t\t}\n\t},\n\n\tsendSplitIndex: function (newSplitIndex, isSplitCol) {\n\n\t\tif (!this._map.isPermissionEdit() || !this._splitCellState || !this.options.syncSplits) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar splitColState = this._splitCellState.x;\n\t\tvar splitRowState = this._splitCellState.y;\n\t\tif (splitColState === -1 || splitRowState === -1) {\n\t\t\t// Did not get the 'first' FreezePanesColumn/FreezePanesRow messages from core yet.\n\t\t\treturn false;\n\t\t}\n\n\t\tvar currentState = isSplitCol ? splitColState : splitRowState;\n\t\tif (currentState === newSplitIndex) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar unoName = isSplitCol ? 'FreezePanesColumn' : 'FreezePanesRow';\n\t\tvar command = {};\n\t\tcommand[unoName] = {\n\t\t\ttype: 'int32',\n\t\t\tvalue: newSplitIndex\n\t\t};\n\n\t\tthis._map.sendUnoCommand('.uno:' + unoName, command);\n\t\treturn true;\n\t},\n\n\t_onCommandValuesMsg: function (textMsg) {\n\t\tvar jsonIdx = textMsg.indexOf('{');\n\t\tif (jsonIdx === -1)\n\t\t\treturn;\n\n\t\tvar values = JSON.parse(textMsg.substring(jsonIdx));\n\t\tif (!values) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar section = app.sectionContainer.getSectionWithName(L.CSections.CommentList.name);\n\t\tvar comment;\n\t\tif (values.commandName === '.uno:ViewRowColumnHeaders') {\n\t\t\tthis._updateHeadersGridLines(values);\n\n\t\t} else if (values.commandName === '.uno:SheetGeometryData') {\n\t\t\tthis._handleSheetGeometryDataMsg(values);\n\n\t\t} else if (values.comments) {\n\t\t\tif (section) {\n\t\t\t\tsection.clearList();\n\t\t\t\tsection.importComments(values.comments);\n\t\t\t}\n\t\t} else if (values.commentsPos) {\n\t\t\t// invalidate all comments\n\t\t\tsection.sectionProperties.commentList.forEach(function (comment) {\n\t\t\t\tcomment.valid = false;\n\t\t\t});\n\t\t\tfor (var index in values.commentsPos) {\n\t\t\t\tcomment = values.commentsPos[index];\n\t\t\t\tif (section)\n\t\t\t\t{\n\t\t\t\t\tvar commentObject;\n\t\t\t\t\tfor (var i = 0; i < section.sectionProperties.commentList.length; i++) {\n\t\t\t\t\t\tif (parseInt(section.sectionProperties.commentList[i].sectionProperties.data.id) === parseInt(comment.id)) {\n\t\t\t\t\t\t\tif (parseInt(section.sectionProperties.commentList[i].sectionProperties.data.tab) === parseInt(comment.tab)) {\n\t\t\t\t\t\t\t\tcommentObject = section.sectionProperties.commentList[i];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// tabs can be moved around and we need to update the tab because the id is still valid.\n\t\t\t\t\t\t\t\tcommentObject = section.sectionProperties.commentList[i];\n\t\t\t\t\t\t\t\tcommentObject.sectionProperties.data.tab = comment.tab;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcommentObject.valid = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (commentObject)\n\t\t\t\t\t\tcommentObject.sectionProperties.data.cellPos = section.stringToRectangles(comment.cellPos)[0];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (section)\n\t\t\t\tsection.onCommentsDataUpdate();\n\n\t\t} else {\n\t\t\tL.CanvasTileLayer.prototype._onCommandValuesMsg.call(this, textMsg);\n\t\t}\n\t},\n\n\t_onTextSelectionMsg: function (textMsg) {\n\t\tL.CanvasTileLayer.prototype._onTextSelectionMsg.call(this, textMsg);\n\t\t// If this is a cellSelection message, user shouldn't be editing a cell. Below check is for ensuring that.\n\t\tif (this.insertMode === false && this._cellCursorXY && this._cellCursorXY.x !== -1) {\n\t\t\t// When insertMode is false, this is a cell selection message.\n\t\t\ttextMsg = textMsg.replace('textselection:', '');\n\t\t\tif (textMsg.trim() !== 'EMPTY' && textMsg.trim() !== '') {\n\t\t\t\tthis._cellSelections = textMsg.split(';');\n\t\t\t\tvar ratio = this._tileSize / this._tileWidthTwips;\n\t\t\t\tvar that = this;\n\t\t\t\tthis._cellSelections = this._cellSelections.map(function(element) {\n\t\t\t\t\telement = element.split(',');\n\t\t\t\t\tvar topLeftTwips = new L.Point(parseInt(element[0]), parseInt(element[1]));\n\t\t\t\t\tvar offset = new L.Point(parseInt(element[2]), parseInt(element[3]));\n\t\t\t\t\tvar bottomRightTwips = topLeftTwips.add(offset);\n\t\t\t\t\tvar boundsTwips = that._convertToTileTwipsSheetArea(new L.Bounds(topLeftTwips, bottomRightTwips));\n\n\t\t\t\t\telement = L.LOUtil.createRectangle(boundsTwips.min.x * ratio, boundsTwips.min.y * ratio, boundsTwips.getSize().x * ratio, boundsTwips.getSize().y * ratio);\n\t\t\t\t\treturn element;\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._cellSelections = Array(0);\n\t\t\t}\n\t\t\tthis._refreshRowColumnHeaders();\n\t\t}\n\t},\n\n\t_onCellCursorMsg: function (textMsg) {\n\t\tL.CanvasTileLayer.prototype._onCellCursorMsg.call(this, textMsg);\n\t\tthis._refreshRowColumnHeaders();\n\t\tif (!this._gotFirstCellCursor && !textMsg.match('EMPTY')) {\n\t\t\t// Drawing is disabled from CalcTileLayer construction, enable it now.\n\t\t\tthis._gotFirstCellCursor = true;\n\t\t\tthis._update();\n\t\t\tthis.enableDrawing();\n\t\t}\n\t},\n\n\t_getEditCursorRectangle: function (msgObj) {\n\n\t\tif (!this.options.printTwipsMsgsEnabled || !this.sheetGeometry ||\n\t\t\t!Object.prototype.hasOwnProperty.call(msgObj, 'relrect') || !Object.prototype.hasOwnProperty.call(msgObj, 'refpoint')) {\n\t\t\t// 1) non-print-twips messaging mode OR\n\t\t\t// 2) the edit-cursor belongs to draw/chart objects.\n\t\t\treturn L.CanvasTileLayer.prototype._getEditCursorRectangle.call(this, msgObj);\n\t\t}\n\n\t\tif (typeof msgObj !== 'object') {\n\t\t\twindow.app.console.error('invalid edit cursor message');\n\t\t\treturn undefined;\n\t\t}\n\n\t\tvar relrect = L.Bounds.parse(msgObj.relrect);\n\t\tvar refpoint = L.Point.parse(msgObj.refpoint);\n\t\trefpoint = this.sheetGeometry.getTileTwipsPointFromPrint(refpoint);\n\t\treturn relrect.add(refpoint);\n\t},\n\n\t_getTextSelectionRectangles: function (textMsg) {\n\n\t\tif (!this.options.printTwipsMsgsEnabled || !this.sheetGeometry) {\n\t\t\treturn L.CanvasTileLayer.prototype._getTextSelectionRectangles.call(this, textMsg);\n\t\t}\n\n\t\tif (typeof textMsg !== 'string') {\n\t\t\twindow.app.console.error('invalid text selection message');\n\t\t\treturn [];\n\t\t}\n\n\t\tvar refpointDelim = '::';\n\t\tvar delimIndex = textMsg.indexOf(refpointDelim);\n\t\tif (delimIndex === -1) {\n\t\t\t// No refpoint information available, treat it as cell-range selection rectangle.\n\t\t\tvar rangeRectArray = L.Bounds.parseArray(textMsg);\n\t\t\trangeRectArray = rangeRectArray.map(function (rect) {\n\t\t\t\treturn this._convertToTileTwipsSheetArea(rect);\n\t\t\t}, this);\n\t\t\treturn rangeRectArray;\n\t\t}\n\n\t\tvar refpoint = L.Point.parse(textMsg.substring(delimIndex + refpointDelim.length));\n\t\trefpoint = this.sheetGeometry.getTileTwipsPointFromPrint(refpoint);\n\n\t\tvar rectArray = L.Bounds.parseArray(textMsg.substring(0, delimIndex));\n\t\trectArray.forEach(function (rect) {\n\t\t\trect._add(refpoint); // compute absolute coordinates and update in-place.\n\t\t});\n\n\t\treturn rectArray;\n\t},\n\n\tgetSnapDocPosX: function (docPosX, unit) {\n\t\tif (!this.options.sheetGeometryDataEnabled) {\n\t\t\treturn docPosX;\n\t\t}\n\n\t\tunit = unit || 'corepixels';\n\n\t\treturn this.sheetGeometry.getSnapDocPosX(docPosX, unit);\n\t},\n\n\tgetSnapDocPosY: function (docPosY, unit) {\n\t\tif (!this.options.sheetGeometryDataEnabled) {\n\t\t\treturn docPosY;\n\t\t}\n\n\t\tunit = unit || 'corepixels';\n\n\t\treturn this.sheetGeometry.getSnapDocPosY(docPosY, unit);\n\t},\n\n\tgetSplitPanesContext: function () {\n\t\tif (!this.hasSplitPanesSupport()) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this._splitPanesContext;\n\t},\n\n\tgetMaxDocSize: function () {\n\n\t\tif (this.sheetGeometry) {\n\t\t\treturn this.sheetGeometry.getSize('corepixels');\n\t\t}\n\n\t\treturn this._twipsToPixels(new L.Point(this._docWidthTwips, this._docHeightTwips));\n\t},\n\n\tgetCursorPos: function () {\n\t\treturn this._twipsToPixels(this._cellCursorTwips.getTopLeft());\n\t},\n\n\t_calculateScrollForNewCellCursor: function () {\n\n\t\tvar scroll = new L.LatLng(0, 0);\n\n\t\tif (!this._cellCursor || this._isEmptyRectangle(this._cellCursor)) {\n\t\t\treturn scroll;\n\t\t}\n\n\t\tvar map = this._map;\n\t\tvar paneRectsInLatLng = this.getPaneLatLngRectangles();\n\n\t\tif (this._cellCursor.isInAny(paneRectsInLatLng)) {\n\t\t\treturn scroll; // no scroll needed.\n\t\t}\n\n\t\tvar freePaneBounds = paneRectsInLatLng[paneRectsInLatLng.length - 1];\n\t\tvar splitPoint = map.unproject(this._splitPanesContext ? this._splitPanesContext.getSplitPos() : new L.Point(0, 0));\n\n\t\tif (this._cellCursor.getEast() > splitPoint.lng) {\n\n\t\t\tvar freePaneWidth = Math.abs(freePaneBounds.getEast() - freePaneBounds.getWest());\n\t\t\tvar cursorWidth = Math.abs(this._cellCursor.getEast() - this._cellCursor.getWest());\n\t\t\tvar spacingX = cursorWidth / 4.0;\n\n\t\t\tif (this._cellCursor.getWest() < freePaneBounds.getWest()) {\n\t\t\t\tscroll.lng = this._cellCursor.getWest() - freePaneBounds.getWest() - spacingX;\n\t\t\t}\n\t\t\telse if (cursorWidth < freePaneWidth && this._cellCursor.getEast() > freePaneBounds.getEast()) {\n\t\t\t\tscroll.lng = this._cellCursor.getEast() - freePaneBounds.getEast() + spacingX;\n\t\t\t}\n\t\t}\n\n\t\tif (this._cellCursor.getSouth() < splitPoint.lat) {\n\n\t\t\tvar spacingY = Math.abs((this._cellCursor.getSouth() - this._cellCursor.getNorth())) / 4.0;\n\t\t\tif (this._cellCursor.getNorth() > freePaneBounds.getNorth()) {\n\t\t\t\tscroll.lat = this._cellCursor.getNorth() - freePaneBounds.getNorth() + spacingY;\n\t\t\t}\n\t\t\telse if (this._cellCursor.getSouth() < freePaneBounds.getSouth()) {\n\t\t\t\tscroll.lat = this._cellCursor.getSouth() - freePaneBounds.getSouth() - spacingY;\n\t\t\t}\n\t\t}\n\n\t\treturn scroll;\n\t},\n\n\tgetSelectedPart: function () {\n\t\treturn this._selectedPart;\n\t},\n});\n\n"]}