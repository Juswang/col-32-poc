{"version":3,"file":"TilesSection.js","sourceRoot":"","sources":["../../../../../../../../../browser/src/layer/tile/TilesSection.ts"],"names":[],"mappings":"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","sourcesContent":["/* -*- tab-width: 4 -*- */\n/* See CanvasSectionContainer.ts for explanations. */\n\ndeclare var L: any;\ndeclare var $: any;\ndeclare var Hammer: any;\ndeclare var app: any;\n\nclass TilesSection {\n\tcontext: CanvasRenderingContext2D = null;\n\tmyTopLeft: Array<number> = null;\n\tdocumentTopLeft: Array<number> = null;\n\tcontainerObject: any = null;\n\tdpiScale: number = null;\n\tname: string = null;\n\tbackgroundColor: string = null;\n\tborderColor: string = null;\n\tboundToSection: string = null;\n\tanchor: Array<any> = new Array(0);\n\tposition: Array<number> = new Array(0);\n\tsize: Array<number> = new Array(0);\n\texpand: Array<string> = new Array(0);\n\tisLocated: boolean = false;\n\tprocessingOrder: number = null;\n\tdrawingOrder: number = null;\n\tzIndex: number = null;\n\tinteractable: boolean = true;\n\tsectionProperties: any = {};\n\tmap: any;\n\toffscreenCanvases: Array<any> = new Array(0);\n\toscCtxs: Array<any> = new Array(0);\n\n\tisCalcRTL: () => boolean;\n\n\tconstructor () {\n\t\tthis.name = L.CSections.Tiles.name;\n\t\t// Below anchor list may be expanded. For example, Writer may have ruler section. Then ruler section should also be added here.\n\t\tthis.anchor = [[L.CSections.ColumnHeader.name, 'bottom', 'top'], [L.CSections.RowHeader.name, 'right', 'left']];\n\t\tthis.position = [0, 0]; // This section's myTopLeft will be anchored to other sections^. No initial position is needed.\n\t\tthis.size = [0, 0]; // Going to be expanded, no initial width or height is necessary.\n\t\tthis.expand = ['top', 'left', 'bottom', 'right'];\n\t\tthis.processingOrder = L.CSections.Tiles.processingOrder;\n\t\tthis.drawingOrder = L.CSections.Tiles.drawingOrder;\n\t\tthis.zIndex = L.CSections.Tiles.zIndex;\n\n\t\tthis.map = L.Map.THIS;\n\n\t\tthis.sectionProperties.docLayer = this.map._docLayer;\n\t\tthis.sectionProperties.tsManager = this.sectionProperties.docLayer._painter;\n\t\tthis.sectionProperties.pageBackgroundInnerMargin = 0; // In core pixels. We don't want backgrounds to have exact same borders with tiles for not making them visible when tiles are rendered.\n\t\tthis.sectionProperties.pageBackgroundBorderColor = 'lightgrey';\n\t\tthis.sectionProperties.pageBackgroundFillColorWriter = 'white';\n\t\tthis.sectionProperties.pageBackgroundTextColor = 'grey';\n\t\tthis.sectionProperties.pageBackgroundFont = String(40 * app.roundedDpiScale) + 'px Arial';\n\t}\n\n\tpublic onInitialize () {\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tthis.offscreenCanvases.push(document.createElement('canvas'));\n\t\t\tthis.oscCtxs.push(this.offscreenCanvases[i].getContext('2d', { alpha: false }));\n\t\t}\n\t\tthis.onResize();\n\t}\n\n\tpublic onResize () {\n\t\tvar tileSize = this.sectionProperties.docLayer._getTileSize();\n\t\tvar borderSize = 3;\n\t\tthis.sectionProperties.osCanvasExtraSize = 2 * borderSize * tileSize;\n\t\tfor (var i = 0; i < 4; ++i) {\n\t\t\tthis.offscreenCanvases[i].width = this.size[0] + this.sectionProperties.osCanvasExtraSize;\n\t\t\tthis.offscreenCanvases[i].height = this.size[1] + this.sectionProperties.osCanvasExtraSize;\n\t\t}\n\t}\n\n\textendedPaneBounds (paneBounds: any) {\n\t\tvar extendedBounds = paneBounds.clone();\n\t\tvar halfExtraSize = this.sectionProperties.osCanvasExtraSize / 2; // This is always an integer.\n\t\tvar spCxt = this.sectionProperties.docLayer.getSplitPanesContext();\n\t\tif (spCxt) {\n\t\t\tvar splitPos = spCxt.getSplitPos().multiplyBy(app.dpiScale);\n\t\t\tif (paneBounds.min.x) { // pane can move in x direction.\n\t\t\t\textendedBounds.min.x = Math.max(splitPos.x, extendedBounds.min.x - halfExtraSize);\n\t\t\t\textendedBounds.max.x += halfExtraSize;\n\t\t\t}\n\t\t\tif (paneBounds.min.y) { // pane can move in y direction.\n\t\t\t\textendedBounds.min.y = Math.max(splitPos.y, extendedBounds.min.y - halfExtraSize);\n\t\t\t\textendedBounds.max.y += halfExtraSize;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\textendedBounds.min.x -= halfExtraSize;\n\t\t\textendedBounds.max.x += halfExtraSize;\n\t\t\textendedBounds.min.y -= halfExtraSize;\n\t\t\textendedBounds.max.y += halfExtraSize;\n\t\t}\n\n\t\treturn extendedBounds;\n\t}\n\n\tpaintWithPanes (tile: any, ctx: any, async: boolean) {\n\t\tvar tileTopLeft = tile.coords.getPos();\n\t\tvar tileBounds = new L.Bounds(tileTopLeft, tileTopLeft.add(ctx.tileSize));\n\n\t\tfor (var i = 0; i < ctx.paneBoundsList.length; ++i) {\n\t\t\t// co-ordinates of this pane in core document pixels\n\t\t\tvar paneBounds = ctx.paneBoundsList[i];\n\t\t\t// co-ordinates of the main-(bottom right) pane in core document pixels\n\t\t\tvar viewBounds = ctx.viewBounds;\n\t\t\t// Extended pane bounds\n\t\t\tvar extendedBounds = this.extendedPaneBounds(paneBounds);\n\n\t\t\t// into real pixel-land ...\n\t\t\tpaneBounds.round();\n\t\t\tviewBounds.round();\n\t\t\textendedBounds.round();\n\n\t\t\tif (paneBounds.intersects(tileBounds)) {\n\t\t\t\tvar paneOffset = paneBounds.getTopLeft(); // allocates\n\t\t\t\t// Cute way to detect the in-canvas pixel offset of each pane\n\t\t\t\tpaneOffset.x = Math.min(paneOffset.x, viewBounds.min.x);\n\t\t\t\tpaneOffset.y = Math.min(paneOffset.y, viewBounds.min.y);\n\n\t\t\t\tthis.drawTileInPane(tile, tileBounds, paneBounds, paneOffset, this.context, async);\n\t\t\t}\n\n\t\t\tif (extendedBounds.intersects(tileBounds)) {\n\t\t\t\tvar offset = extendedBounds.getTopLeft();\n\t\t\t\tthis.drawTileInPane(tile, tileBounds, extendedBounds, offset, this.oscCtxs[i], async);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate beforeDraw(canvasCtx: CanvasRenderingContext2D): void {\n\t\tconst mirrorTile: boolean = this.isCalcRTL();\n\t\tif (mirrorTile) {\n\t\t\tcanvasCtx.save();\n\t\t\tcanvasCtx.translate(this.size[0], 0);\n\t\t\tcanvasCtx.scale(-1, 1);\n\t\t}\n\t}\n\n\tprivate afterDraw(canvasCtx: CanvasRenderingContext2D): void {\n\t\tconst mirrorTile: boolean = this.isCalcRTL();\n\t\tif (mirrorTile) {\n\t\t\tcanvasCtx.restore();\n\t\t}\n\t}\n\n\tdrawTileInPane (tile: any, tileBounds: any, paneBounds: any, paneOffset: any, canvasCtx: CanvasRenderingContext2D, clearBackground: boolean) {\n\t\t// intersect - to avoid state thrash through clipping\n\t\tvar crop = new L.Bounds(tileBounds.min, tileBounds.max);\n\t\tcrop.min.x = Math.max(paneBounds.min.x, tileBounds.min.x);\n\t\tcrop.min.y = Math.max(paneBounds.min.y, tileBounds.min.y);\n\t\tcrop.max.x = Math.min(paneBounds.max.x, tileBounds.max.x);\n\t\tcrop.max.y = Math.min(paneBounds.max.y, tileBounds.max.y);\n\n\t\tvar cropWidth = crop.max.x - crop.min.x;\n\t\tvar cropHeight = crop.max.y - crop.min.y;\n\n\t\tif (cropWidth && cropHeight) {\n\t\t\tif (clearBackground || this.containerObject.isZoomChanged() || canvasCtx !== this.context) {\n\t\t\t\t// Whole canvas is not cleared after zoom has changed, so clear it per tile as they arrive.\n\t\t\t\tcanvasCtx.fillStyle = this.containerObject.getClearColor();\n\t\t\t\tthis.beforeDraw(canvasCtx);\n\t\t\t\tcanvasCtx.fillRect(\n\t\t\t\t\tcrop.min.x - paneOffset.x,\n\t\t\t\t\tcrop.min.y - paneOffset.y,\n\t\t\t\t\tcropWidth, cropHeight);\n\t\t\t\tthis.afterDraw(canvasCtx);\n\t\t\t\tvar gridSection = this.containerObject.getSectionWithName(L.CSections.CalcGrid.name);\n\t\t\t\tgridSection.onDrawArea(crop, paneOffset, canvasCtx);\n\t\t\t}\n\n\t\t\tthis.beforeDraw(canvasCtx);\n\t\t\tcanvasCtx.drawImage(tile.el,\n\t\t\t\tcrop.min.x - tileBounds.min.x,\n\t\t\t\tcrop.min.y - tileBounds.min.y,\n\t\t\t\tcropWidth, cropHeight,\n\t\t\t\tcrop.min.x - paneOffset.x,\n\t\t\t\tcrop.min.y - paneOffset.y,\n\t\t\t\tcropWidth, cropHeight);\n\t\t\tthis.afterDraw(canvasCtx);\n\t\t}\n\n\t\tif (this.sectionProperties.docLayer._debug)\n\t\t{\n\t\t\tcanvasCtx.strokeStyle = 'rgba(255, 0, 0, 0.5)';\n\t\t\tthis.beforeDraw(canvasCtx);\n\t\t\tcanvasCtx.strokeRect(tile.coords.x - paneBounds.min.x, tile.coords.y - paneBounds.min.y, 256, 256);\n\t\t\tthis.afterDraw(canvasCtx);\n\t\t}\n\t}\n\n\tpdfViewDrawTileBorders (tile: any, offset: any, tileSize: number) {\n\t\tthis.context.strokeStyle = 'red';\n\t\tthis.context.strokeRect(offset.x, offset.y, tileSize, tileSize);\n\t\tthis.context.font = '20px Verdana';\n\t\tthis.context.fillStyle = 'black';\n\t\tthis.context.fillText(tile.coords.x + ' ' + tile.coords.y + ' ' + tile.coords.part + ' ' + (tile.loaded ? 'y': 'n'), Math.round(offset.x + tileSize * 0.5), Math.round(offset.y + tileSize * 0.5));\n\t}\n\n\tpaintSimple (tile: any, ctx: any, async: boolean) {\n\t\tctx.viewBounds.round();\n\t\tvar offset = new L.Point(tile.coords.getPos().x - ctx.viewBounds.min.x, tile.coords.getPos().y - ctx.viewBounds.min.y);\n\t\tvar halfExtraSize = this.sectionProperties.osCanvasExtraSize / 2;\n\t\tvar extendedOffset = offset.add(new L.Point(halfExtraSize, halfExtraSize));\n\n\t\tif ((async || this.containerObject.isZoomChanged()) && !app.file.fileBasedView) {\n\t\t\t// Non Calc tiles(handled by paintSimple) can have transparent pixels,\n\t\t\t// so clear before paint if the call is an async one.\n\t\t\t// For the full view area repaint, whole canvas is cleared by section container.\n\t\t\t// Whole canvas is not cleared after zoom has changed, so clear it per tile as they arrive even if not async.\n\t\t\tthis.context.fillStyle = this.containerObject.getClearColor();\n\t\t\tthis.context.fillRect(offset.x, offset.y, ctx.tileSize.x, ctx.tileSize.y);\n\t\t}\n\n\t\tif (app.file.fileBasedView) {\n\t\t\tvar tileSize = this.sectionProperties.docLayer._tileSize;\n\t\t\tvar ratio = tileSize / this.sectionProperties.docLayer._tileHeightTwips;\n\t\t\tvar partHeightPixels = Math.round((this.sectionProperties.docLayer._partHeightTwips + this.sectionProperties.docLayer._spaceBetweenParts) * ratio);\n\n\t\t\toffset.y = tile.coords.part * partHeightPixels + tile.coords.y - this.documentTopLeft[1];\n\t\t\textendedOffset.y = offset.y + halfExtraSize;\n\n\t\t\tthis.context.drawImage(tile.el, offset.x, offset.y, tileSize, tileSize);\n\t\t\tthis.oscCtxs[0].drawImage(tile.el, extendedOffset.x, extendedOffset.y, tileSize, tileSize);\n\t\t\t//this.pdfViewDrawTileBorders(tile, offset, tileSize);\n\t\t}\n\t\telse {\n\t\t\tthis.context.drawImage(tile.el, offset.x, offset.y, ctx.tileSize.x, ctx.tileSize.y);\n\t\t\tthis.oscCtxs[0].drawImage(tile.el, extendedOffset.x, extendedOffset.y, ctx.tileSize.x, ctx.tileSize.y);\n\t\t}\n\t}\n\n\tpublic paint (tile: any, ctx: any, async: boolean = false) {\n\t\tif (this.containerObject.isInZoomAnimation() || this.sectionProperties.tsManager.waitForTiles())\n\t\t\treturn;\n\n\t\tif (!ctx)\n\t\t\tctx = this.sectionProperties.tsManager._paintContext();\n\n\t\tthis.containerObject.setPenPosition(this);\n\n\t\tif (ctx.paneBoundsActive === true)\n\t\t\tthis.paintWithPanes(tile, ctx, async);\n\t\telse\n\t\t\tthis.paintSimple(tile, ctx, async);\n\t}\n\n\tprivate forEachTileInView(zoom: number, part: number, ctx: any,\n\t\tcallback: (tile: any, coords: any) => boolean) {\n\t\tvar docLayer = this.sectionProperties.docLayer;\n\t\tvar tileRanges = ctx.paneBoundsList.map(docLayer._pxBoundsToTileRange, docLayer);\n\n\t\tif (app.file.fileBasedView) {\n\t\t\tvar coordList: Array<any> = this.sectionProperties.docLayer._updateFileBasedView(true);\n\n\t\t\tfor (var k: number = 0; k < coordList.length; k++) {\n\t\t\t\tvar key = coordList[k].key();\n\t\t\t\tvar tile = docLayer._tiles[key];\n\t\t\t\tif (!callback(tile, coordList[k]))\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor (var rangeIdx = 0; rangeIdx < tileRanges.length; ++rangeIdx) {\n\t\t\t\tvar tileRange = tileRanges[rangeIdx];\n\t\t\t\tfor (var j = tileRange.min.y; j <= tileRange.max.y; ++j) {\n\t\t\t\t\tfor (var i: number = tileRange.min.x; i <= tileRange.max.x; ++i) {\n\t\t\t\t\t\tvar coords = new L.TileCoordData(\n\t\t\t\t\t\t\ti * ctx.tileSize.x,\n\t\t\t\t\t\t\tj * ctx.tileSize.y,\n\t\t\t\t\t\t\tzoom,\n\t\t\t\t\t\t\tpart);\n\n\t\t\t\t\t\tvar key = coords.key();\n\t\t\t\t\t\tvar tile = docLayer._tiles[key];\n\n\t\t\t\t\t\tif (!callback(tile, coords))\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic haveAllTilesInView(zoom?: number, part?: number, ctx?: any): boolean {\n\t\tzoom = zoom || Math.round(this.map.getZoom());\n\t\tpart = part || this.sectionProperties.docLayer._selectedPart;\n\t\tctx = ctx || this.sectionProperties.tsManager._paintContext();\n\n\t\tvar allTilesLoaded = true;\n\t\tthis.forEachTileInView(zoom, part, ctx, function (tile: any): boolean {\n\t\t\t// Ensure tile is loaded.\n\t\t\tif (!tile || !tile.loaded) {\n\t\t\t\tallTilesLoaded = false;\n\t\t\t\treturn false; // stop search.\n\t\t\t}\n\t\t\treturn true; // continue checking remaining tiles.\n\t\t});\n\n\t\treturn allTilesLoaded;\n\t}\n\n\tprivate drawPageBackgroundWriter (ctx: any, rectangle: any, pageNumber: number) {\n\t\trectangle = [Math.round(rectangle[0] * app.twipsToPixels), Math.round(rectangle[1] * app.twipsToPixels), Math.round(rectangle[2] * app.twipsToPixels), Math.round(rectangle[3] * app.twipsToPixels)];\n\n\t\tthis.context.fillStyle = this.sectionProperties.pageBackgroundFillColorWriter;\n\t\tthis.context.fillRect(rectangle[0] - ctx.viewBounds.min.x + this.sectionProperties.pageBackgroundInnerMargin,\n\t\t\trectangle[1] - ctx.viewBounds.min.y + this.sectionProperties.pageBackgroundInnerMargin,\n\t\t\trectangle[2] - this.sectionProperties.pageBackgroundInnerMargin,\n\t\t\trectangle[3] - this.sectionProperties.pageBackgroundInnerMargin);\n\n\t\t// We don't want to render page numbers to the background of pages any more. In this case we could set pageBackgroundFillColorWriter value once for all pages. I'll keep it for now.\n\t\t//this.context.fillStyle = this.sectionProperties.pageBackgroundTextColor;\n\t\t//this.context.fillText(String(pageNumber), Math.round((2 * rectangle[0] + rectangle[2]) * 0.5) - ctx.viewBounds.min.x, Math.round((2 * rectangle[1] + rectangle[3]) * 0.5) - ctx.viewBounds.min.y, rectangle[2] * 0.4);\n\t}\n\n\tprivate drawPageBackgroundFileBasedView (ctx: any, top: number, bottom: number) {\n\t\tvar partHeightPixels: number = Math.round(this.map._docLayer._partHeightTwips * app.twipsToPixels);\n\t\tvar gap: number = Math.round(this.map._docLayer._spaceBetweenParts * app.twipsToPixels);\n\t\tvar partWidthPixels: number = Math.round(this.map._docLayer._partWidthTwips * app.twipsToPixels);\n\t\tvar startY: number = (partHeightPixels + gap) * (top > 0 ? top -1: 0);\n\t\tvar rectangle: Array<number>;\n\n\t\tfor (var i: number = 0; i <= bottom - top; i++) {\n\t\t\trectangle = [0, startY, partWidthPixels, partHeightPixels];\n\n\t\t\tthis.context.strokeRect(\n\t\t\t\trectangle[0] - ctx.viewBounds.min.x + this.sectionProperties.pageBackgroundInnerMargin,\n\t\t\t\trectangle[1] - ctx.viewBounds.min.y + this.sectionProperties.pageBackgroundInnerMargin,\n\t\t\t\trectangle[2] - this.sectionProperties.pageBackgroundInnerMargin,\n\t\t\t\trectangle[3] - this.sectionProperties.pageBackgroundInnerMargin);\n\n\t\t\tthis.context.fillText(String(i + top + 1),\n\t\t\t\tMath.round((2 * rectangle[0] + rectangle[2]) * 0.5) - ctx.viewBounds.min.x,\n\t\t\t\tMath.round((2 * rectangle[1] + rectangle[3]) * 0.5) - ctx.viewBounds.min.y,\n\t\t\t\trectangle[2] * 0.4);\n\n\t\t\tstartY += partHeightPixels + gap;\n\t\t}\n\t}\n\n\tprivate drawPageBackgrounds (ctx: any) {\n\t\tif (this.map._docLayer._docType !== 'text' && !app.file.fileBasedView)\n\t\t\treturn; // For now, Writer and PDF view only.\n\n\t\t/* Note: Probably, Calc won't need this function but in case this is activated for Calc:\n\t\t\t\t* If the font change of context affects Calc drawings (headers etc), then one should set the font there.\n\t\t\t\t* Creating a temp variable like \"oldFont\" here is not a good solution in that case.\n\t\t*/\n\n\t\tif (!this.containerObject.getDocumentAnchorSection())\n\t\t\treturn;\n\n\t\tthis.context.fillStyle = this.sectionProperties.pageBackgroundTextColor;\n\t\tthis.context.strokeStyle = this.sectionProperties.pageBackgroundBorderColor;\n\t\tthis.context.lineWidth = app.roundedDpiScale;\n\n\t\tthis.context.font = this.sectionProperties.pageBackgroundFont;\n\n\t\tif (this.map._docLayer._docType === 'text') {\n\t\t\tvar viewRectangleTwips = [this.documentTopLeft[0], this.documentTopLeft[1], this.containerObject.getDocumentAnchorSection().size[0], this.containerObject.getDocumentAnchorSection().size[1]];\n\t\t\tviewRectangleTwips = viewRectangleTwips.map(function(element: number) {\n\t\t\t\treturn Math.round(element * app.pixelsToTwips);\n\t\t\t});\n\n\t\t\tfor (var i: number = 0; i < app.file.writer.pageRectangleList.length; i++) {\n\t\t\t\tvar rectangle: any = app.file.writer.pageRectangleList[i];\n\t\t\t\tif ((rectangle[1] > viewRectangleTwips[1] && rectangle[1] < viewRectangleTwips[1] + viewRectangleTwips[3]) ||\n\t\t\t\t\t(rectangle[1] + rectangle[3] > viewRectangleTwips[1] && rectangle[1] + rectangle[3] < viewRectangleTwips[1] + viewRectangleTwips[3]) ||\n\t\t\t\t\t(rectangle[1] < viewRectangleTwips[1] && rectangle[1] + rectangle[3] > viewRectangleTwips[1] + viewRectangleTwips[3])) {\n\n\t\t\t\t\tthis.drawPageBackgroundWriter(ctx, rectangle.slice(), i + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (app.file.fileBasedView) { // Writer and fileBasedView can not be \"true\" at the same time.\n\t\t\t// PDF view supports only same-sized pages for now. So we can use simple math instead of a loop.\n\t\t\tvar partHeightPixels: number = Math.round((this.map._docLayer._partHeightTwips + this.map._docLayer._spaceBetweenParts) * app.twipsToPixels);\n\t\t\tvar visibleBounds: Array<number> = this.containerObject.getDocumentBounds();\n\t\t\tvar topVisible: number = Math.floor(visibleBounds[1] / partHeightPixels);\n\t\t\tvar bottomVisible: number = Math.ceil(visibleBounds[3] / partHeightPixels);\n\n\t\t\t// Check existence of pages.\n\t\t\ttopVisible = topVisible >= 0 ? topVisible : 0;\n\t\t\tbottomVisible = bottomVisible < this.map._docLayer._parts ? bottomVisible : this.map._docLayer._parts - 1;\n\n\t\t\tif (!isNaN(partHeightPixels) && partHeightPixels > 0)\n\t\t\t\tthis.drawPageBackgroundFileBasedView(ctx, topVisible, bottomVisible);\n\t\t}\n\t}\n\n\tpublic onDraw () {\n\t\tif (this.containerObject.isInZoomAnimation())\n\t\t\treturn;\n\n\t\tif (this.containerObject.testing) {\n\t\t\tthis.containerObject.createUpdateSingleDivElement(this);\n\t\t}\n\n\t\tvar zoom = Math.round(this.map.getZoom());\n\t\tvar part = this.sectionProperties.docLayer._selectedPart;\n\n\t\t// Calculate all this here intead of doing it per tile.\n\t\tvar ctx = this.sectionProperties.tsManager._paintContext();\n\n\t\tif (this.sectionProperties.tsManager.waitForTiles()) {\n\t\t\tif (!this.haveAllTilesInView(zoom, part, ctx))\n\t\t\t\treturn;\n\t\t} else if (!this.containerObject.isZoomChanged()) {\n\t\t\t// Don't show page border and page numbers (drawn by drawPageBackgrounds) if zoom is changing\n\t\t\t// after a zoom animation.\n\t\t\tthis.drawPageBackgrounds(ctx);\n\t\t}\n\n\t\tfor (var i = 0; i < ctx.paneBoundsList.length; ++i) {\n\t\t\tthis.oscCtxs[i].fillStyle = this.containerObject.getClearColor();\n\t\t\tthis.oscCtxs[i].fillRect(0, 0, this.offscreenCanvases[i].width, this.offscreenCanvases[i].height);\n\t\t}\n\n\t\tvar docLayer = this.sectionProperties.docLayer;\n\t\tvar doneTiles = new Set();\n\t\tthis.forEachTileInView(zoom, part, ctx, function (tile: any, coords: any): boolean {\n\t\t\tif (doneTiles.has(coords.key()))\n\t\t\t\treturn true;\n\n\t\t\t// Ensure tile is loaded and is within document bounds.\n\t\t\tif (tile && tile.loaded && docLayer._isValidTile(coords)) {\n\t\t\t\tthis.paint(tile, ctx, false /* async? */);\n\t\t\t}\n\t\t\tdoneTiles.add(coords.key());\n\t\t\treturn true; // continue with remaining tiles.\n\t\t}.bind(this));\n\t}\n\n\t// Return the fraction of intersection area with area1.\n\tstatic getTileIntersectionAreaFraction(tileBounds: any, viewBounds: any): number {\n\n\t\tvar size = tileBounds.getSize();\n\t\tif (size.x <= 0 || size.y <= 0)\n\t\t\treturn 0;\n\n\t\tvar intersection = new L.Bounds(\n\t\t\tnew L.Point(\n\t\t\t\tMath.max(tileBounds.min.x, viewBounds.min.x),\n\t\t\t\tMath.max(tileBounds.min.y, viewBounds.min.y)),\n\t\t\tnew L.Point(\n\t\t\t\tMath.min(tileBounds.max.x, viewBounds.max.x),\n\t\t\t\tMath.min(tileBounds.max.y, viewBounds.max.y))\n\t\t);\n\n\t\tvar interSize = intersection.getSize();\n\t\treturn Math.max(0, interSize.x) * Math.max(0, interSize.y) / (size.x * size.y);\n\t}\n\n\tprivate forEachTileInArea(area: any, zoom: number, part: number, ctx: any,\n\t\tcallback: (tile: any, coords: any) => boolean) {\n\t\tvar docLayer = this.sectionProperties.docLayer;\n\n\t\tif (app.file.fileBasedView) {\n\t\t\tvar coordList: Array<any> = docLayer._updateFileBasedView(true, area, zoom);\n\n\t\t\tfor (var k: number = 0; k < coordList.length; k++) {\n\t\t\t\tvar coords = coordList[k];\n\t\t\t\tvar key = coords.key();\n\t\t\t\tvar tile = docLayer._tiles[key];\n\t\t\t\tif (!tile) {\n\t\t\t\t\tvar img = docLayer._tileCache[key];\n\t\t\t\t\tif (img)\n\t\t\t\t\t\ttile = { el: img, loaded: true, coords: coords };\n\t\t\t\t}\n\t\t\t\tcallback(tile, coords);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar tileRange = docLayer._pxBoundsToTileRange(area);\n\n\t\tfor (var j = tileRange.min.y; j <= tileRange.max.y; ++j) {\n\t\t\tfor (var i = tileRange.min.x; i <= tileRange.max.x; ++i) {\n\t\t\t\tvar coords = new L.TileCoordData(\n\t\t\t\t\ti * ctx.tileSize.x,\n\t\t\t\t\tj * ctx.tileSize.y,\n\t\t\t\t\tzoom,\n\t\t\t\t\tpart);\n\n\t\t\t\tvar key = coords.key();\n\t\t\t\tvar tile = docLayer._tiles[key];\n\t\t\t\tif (!tile) {\n\t\t\t\t\tvar img = docLayer._tileCache[key];\n\t\t\t\t\tif (img)\n\t\t\t\t\t\ttile = { el: img, loaded: true, coords: coords };\n\t\t\t\t}\n\t\t\t\tcallback(tile, coords);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Used for rendering a zoom-out frame, to determine which zoom level tiles\n\t * to use for rendering.\n\t *\n\t * @param area specifies the document area in core-pixels at the current\n\t * zoom level.\n\t *\n\t * @returns the zoom-level with maximum tile content.\n\t */\n\tprivate zoomLevelWithMaxContentInArea(area: any,\n\t\tareaZoom: number, part: number, ctx: any): number {\n\n\t\tvar frameScale = this.sectionProperties.tsManager._zoomFrameScale;\n\t\tvar docLayer = this.sectionProperties.docLayer;\n\t\tvar targetZoom = Math.round(this.map.getScaleZoom(frameScale, areaZoom));\n\t\tvar bestZoomLevel = targetZoom;\n\t\tvar availAreaScoreAtBestZL = -Infinity; // Higher the better.\n\t\tvar area = area.clone();\n\t\tif (area.min.x < 0)\n\t\t\tarea.min.x = 0;\n\t\tif (area.min.y < 0)\n\t\t\tarea.min.y = 0;\n\n\t\tvar minZoom = <number> this.map.options.minZoom;\n\t\tvar maxZoom = <number> this.map.options.maxZoom;\n\t\tfor (var zoom = minZoom; zoom <= maxZoom; ++zoom) {\n\t\t\tvar availAreaScore = 0; // Higher the better.\n\t\t\tvar hasTiles = false;\n\n\t\t\t// To scale up missing-area scores to maxZoom as we need an\n\t\t\t// good resolution integer score at the end.\n\t\t\tvar dimensionCorrection = this.map.zoomToFactor(maxZoom - zoom + this.map.options.zoom);\n\n\t\t\t// Compute area for zoom-level 'zoom'.\n\t\t\tvar areaAtZoom = this.scaleBoundsForZoom(area, zoom, areaZoom);\n\t\t\t//console.log('DEBUG:: areaAtZoom = ' + areaAtZoom);\n\t\t\tvar relScale = this.map.getZoomScale(zoom, areaZoom);\n\n\t\t\tthis.forEachTileInArea(areaAtZoom, zoom, part, ctx, function(tile, coords) {\n\t\t\t\tif (tile && tile.el) {\n\t\t\t\t\tvar tilePos = coords.getPos();\n\n\t\t\t\t\tif (app.file.fileBasedView) {\n\t\t\t\t\t\tvar ratio = ctx.tileSize.y * relScale / docLayer._tileHeightTwips;\n\t\t\t\t\t\tvar partHeightPixels = Math.round((docLayer._partHeightTwips + docLayer._spaceBetweenParts) * ratio);\n\t\t\t\t\t\ttilePos.y = coords.part * partHeightPixels + tilePos.y;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar tileBounds = new L.Bounds(tilePos, tilePos.add(ctx.tileSize));\n\t\t\t\t\tvar interFrac = TilesSection.getTileIntersectionAreaFraction(tileBounds, areaAtZoom);\n\n\t\t\t\t\t// Add to score how much of tile area is available.\n\t\t\t\t\tavailAreaScore += interFrac;\n\t\t\t\t\tif (!hasTiles)\n\t\t\t\t\t\thasTiles = true;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t});\n\n\t\t\t// Scale up with a correction factor to make area scores comparable b/w zoom levels.\n\t\t\tavailAreaScore = hasTiles ? Math.round(availAreaScore\n\t\t\t\t* dimensionCorrection /* width */\n\t\t\t\t* dimensionCorrection /* height */\n\t\t\t\t/ 10 /* resolution control */) : -Infinity;\n\n\t\t\t// Accept this zoom if it has a lower missing-area score\n\t\t\t// In case of a tie we prefer tiles from a zoom level closer to targetZoom.\n\t\t\tif (availAreaScore > availAreaScoreAtBestZL ||\n\t\t\t\t(availAreaScore == availAreaScoreAtBestZL && Math.abs(targetZoom - bestZoomLevel) > Math.abs(targetZoom - zoom))) {\n\t\t\t\tavailAreaScoreAtBestZL = availAreaScore;\n\t\t\t\tbestZoomLevel = zoom;\n\t\t\t}\n\t\t}\n\n\t\treturn bestZoomLevel;\n\t}\n\n\t// Called by tsManager to draw a zoom animation frame.\n\tpublic drawZoomFrame(ctx?: any) {\n\t\tvar tsManager = this.sectionProperties.tsManager;\n\t\tif (!tsManager._inZoomAnim)\n\t\t\treturn;\n\n\t\tvar scale = tsManager._zoomFrameScale;\n\t\tif (!scale || !tsManager._newCenter)\n\t\t\treturn;\n\n\t\tctx = ctx || this.sectionProperties.tsManager._paintContext();\n\t\tvar docLayer = this.sectionProperties.docLayer;\n\t\tvar zoom = Math.round(this.map.getZoom());\n\t\tvar part = docLayer._selectedPart;\n\t\tvar splitPos = ctx.splitPos;\n\n\t\tthis.containerObject.setPenPosition(this);\n\t\tvar viewSize = ctx.viewBounds.getSize();\n\t\t// clear the document area first.\n\t\tthis.context.fillStyle = this.containerObject.getClearColor();\n\t\tthis.context.fillRect(0, 0, viewSize.x, viewSize.y);\n\n\t\tvar paneBoundsList = ctx.paneBoundsList;\n\n\t\tfor (var k = 0; k < paneBoundsList.length ; ++k) {\n\t\t\tvar paneBounds = paneBoundsList[k];\n\t\t\tvar paneSize = paneBounds.getSize();\n\n\t\t\t// Calculate top-left in doc core-pixels for the frame.\n\t\t\tvar docPos = tsManager._getZoomDocPos(tsManager._newCenter, paneBounds, splitPos, scale, false /* findFreePaneCenter? */);\n\n\t\t\tvar destPos = new L.Point(0, 0);\n\t\t\tvar docAreaSize = paneSize.divideBy(scale);\n\t\t\tif (paneBoundsList.length > 1) {\n\t\t\t\tif (paneBounds.min.x) {\n\t\t\t\t\t// Pane is free to move in X direction.\n\t\t\t\t\tdestPos.x = splitPos.x;\n\t\t\t\t\tpaneSize.x -= splitPos.x;\n\t\t\t\t} else {\n\t\t\t\t\t// Pane is fixed in X direction.\n\t\t\t\t\tdocAreaSize.x = paneSize.x;\n\t\t\t\t}\n\n\t\t\t\tif (paneBounds.min.y) {\n\t\t\t\t\t// Pane is free to move in Y direction.\n\t\t\t\t\tdestPos.y = splitPos.y;\n\t\t\t\t\tpaneSize.y -= splitPos.y;\n\t\t\t\t} else {\n\t\t\t\t\t// Pane is fixed in Y direction.\n\t\t\t\t\tdocAreaSize.y = paneSize.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar docRange = new L.Bounds(docPos.topLeft, docPos.topLeft.add(docAreaSize));\n\t\t\tif (tsManager._calcGridSection) {\n\t\t\t\ttsManager._calcGridSection.onDrawArea(docRange, docRange.min.subtract(destPos), this.context);\n\t\t\t}\n\t\t\tvar canvasContext = this.context;\n\n\t\t\tvar bestZoomSrc = zoom;\n\t\t\tvar sheetGeometry = docLayer.sheetGeometry;\n\t\t\tvar useSheetGeometry = false;\n\t\t\tif (scale < 1.0) {\n\t\t\t\tuseSheetGeometry = !!sheetGeometry;\n\t\t\t\tbestZoomSrc = this.zoomLevelWithMaxContentInArea(docRange, zoom, part, ctx);\n\t\t\t}\n\n\t\t\tvar docRangeScaled = (bestZoomSrc == zoom) ? docRange : this.scaleBoundsForZoom(docRange, bestZoomSrc, zoom);\n\t\t\tvar destPosScaled = (bestZoomSrc == zoom) ? destPos : this.scalePosForZoom(destPos, bestZoomSrc, zoom);\n\t\t\tvar relScale = (bestZoomSrc == zoom) ? 1 : this.map.getZoomScale(bestZoomSrc, zoom);\n\n\t\t\tthis.beforeDraw(canvasContext);\n\t\t\tthis.forEachTileInArea(docRangeScaled, bestZoomSrc, part, ctx, function (tile: any, coords: any): boolean {\n\t\t\t\tif (!tile || !tile.loaded || !docLayer._isValidTile(coords))\n\t\t\t\t\treturn false;\n\n\t\t\t\tvar tileCoords = tile.coords.getPos();\n\t\t\t\tif (app.file.fileBasedView) {\n\t\t\t\t\tvar ratio = ctx.tileSize.y * relScale / docLayer._tileHeightTwips;\n\t\t\t\t\tvar partHeightPixels = Math.round((docLayer._partHeightTwips + docLayer._spaceBetweenParts) * ratio);\n\t\t\t\t\ttileCoords.y = tile.coords.part * partHeightPixels + tileCoords.y;\n\t\t\t\t}\n\t\t\t\tvar tileBounds = new L.Bounds(tileCoords, tileCoords.add(ctx.tileSize));\n\n\t\t\t\tvar crop = new L.Bounds(tileBounds.min, tileBounds.max);\n\t\t\t\tcrop.min.x = Math.max(docRangeScaled.min.x, tileBounds.min.x);\n\t\t\t\tcrop.min.y = Math.max(docRangeScaled.min.y, tileBounds.min.y);\n\t\t\t\tcrop.max.x = Math.min(docRangeScaled.max.x, tileBounds.max.x);\n\t\t\t\tcrop.max.y = Math.min(docRangeScaled.max.y, tileBounds.max.y);\n\n\t\t\t\tvar cropWidth = crop.max.x - crop.min.x;\n\t\t\t\tvar cropHeight = crop.max.y - crop.min.y;\n\n\t\t\t\tvar tileOffset = crop.min.subtract(tileBounds.min);\n\t\t\t\tvar paneOffset = crop.min.subtract(docRangeScaled.min.subtract(destPosScaled));\n\t\t\t\tif (cropWidth && cropHeight) {\n\t\t\t\t\tcanvasContext.drawImage(tile.el,\n\t\t\t\t\t\ttileOffset.x, tileOffset.y, // source x, y\n\t\t\t\t\t\tcropWidth, cropHeight, // source size\n\t\t\t\t\t\t// Destination x, y, w, h (In non-Chrome browsers it leaves lines without the 0.5 correction).\n\t\t\t\t\t\tMath.floor(paneOffset.x / relScale * scale) + 0.5, // Destination x\n\t\t\t\t\t\tMath.floor(paneOffset.y / relScale * scale) + 0.5, // Destination y\n\n\t\t\t\t\t\tMath.floor((cropWidth / relScale) * scale) + 1.5,    // Destination width\n\t\t\t\t\t\tMath.floor((cropHeight / relScale) * scale) + 1.5);    // Destination height\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}); // end of forEachTileInArea call.\n\t\t\tthis.afterDraw(canvasContext);\n\n\t\t} // End of pane bounds list loop.\n\n\t}\n\n\tprivate scalePosForZoom(pos: any, toZoom: number, fromZoom: number): any {\n\t\tvar docLayer = this.sectionProperties.docLayer;\n\t\tvar convScale = this.map.getZoomScale(toZoom, fromZoom);\n\n\t\tif (docLayer.sheetGeometry) {\n\t\t\tvar toScale = convScale * docLayer._tileSize * 15.0 / docLayer._tileWidthTwips;\n\t\t\ttoScale = docLayer._tileSize * 15.0 / Math.round(15.0 * docLayer._tileSize / toScale);\n\t\t\tvar posScaled = docLayer.sheetGeometry.getCorePixelsAtZoom(pos, toScale);\n\t\t\treturn posScaled;\n\t\t}\n\n\t\treturn pos.multiplyBy(convScale);\n\t}\n\n\tprivate scaleBoundsForZoom(corePxBounds: any, toZoom: number, fromZoom: number) {\n\t\tvar docLayer = this.sectionProperties.docLayer;\n\t\tvar convScale = this.map.getZoomScale(toZoom, fromZoom);\n\n\t\tif (docLayer.sheetGeometry) {\n\n\t\t\tvar topLeft = this.scalePosForZoom(corePxBounds.min, toZoom, fromZoom);\n\t\t\tvar size = corePxBounds.getSize().multiplyBy(convScale);\n\t\t\treturn new L.Bounds(\n\t\t\t\ttopLeft,\n\t\t\t\ttopLeft.add(size)\n\t\t\t);\n\t\t}\n\n\t\treturn new L.Bounds(\n\t\t\tcorePxBounds.min.multiplyBy(convScale),\n\t\t\tcorePxBounds.max.multiplyBy(convScale)\n\t\t);\n\t}\n\n\tpublic onMouseWheel () { return; }\n\tpublic onMouseMove () { return; }\n\tpublic onMouseDown () { return; }\n\tpublic onMouseUp () { return; }\n\tpublic onMouseEnter () { return; }\n\tpublic onMouseLeave () { return; }\n\tpublic onClick () { return; }\n\tpublic onDoubleClick () { return; }\n\tpublic onContextMenu () { return; }\n\tpublic onLongPress () { return; }\n\tpublic onMultiTouchStart () { return; }\n\tpublic onMultiTouchMove () { return; }\n\tpublic onMultiTouchEnd () { return; }\n\tpublic onNewDocumentTopLeft () { return; }\n}\n\nL.getNewTilesSection = function () {\n\treturn new TilesSection();\n};\n"]}