{"version":3,"file":"CSplitterLine.js","sourceRoot":"","sources":["../../../../../../../../../browser/src/layer/vector/CSplitterLine.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * CSplitterLine is a CRectangle to be used to show the splits when there are freeze-panes.\n */\n\nclass CSplitterLine extends CRectangle {\n\n\tprivate isHoriz: boolean = true; // splitter divides X axis (vertical line) ?\n\tprivate map: any;\n\tprivate origOpacity: number;\n\tprivate inactive: boolean;\n\n\tconstructor(map: any, options: any) {\n\t\tsuper(new cool.Bounds(undefined), options);\n\n\t\tthis.fixed = true;\n\t\tthis.stroke = false;\n\t\tthis.fill = true;\n\t\tthis.opacity = 0;\n\n\t\t// Splitters should always be behind other overlays.\n\t\tthis.zIndex = -Infinity;\n\n\t\tif (options.isHoriz !== undefined)\n\t\t\tthis.isHoriz = options.isHoriz;\n\n\t\tthis.map = map;\n\n\t\t// preserve original opacity.\n\t\tthis.origOpacity = this.fillOpacity;\n\n\t\tthis.onChange();\n\t}\n\n\tonResize() {\n\t\tthis.onChange();\n\t}\n\n\tonPositionChange() {\n\t\tthis.onChange();\n\t}\n\n\tonChange() {\n\t\tvar newBounds = this.computeBounds();\n\t\tthis.fillOpacity = this.inactive ? 0 : this.origOpacity;\n\t\tthis.setBounds(newBounds);\n\t}\n\n\tprivate computeBounds(): cool.Bounds {\n\t\tvar docLayer = this.map._docLayer;\n\t\tvar mapSize = this.map.getPixelBoundsCore().getSize();\n\t\tmapSize.round();\n\t\tvar splitPos = docLayer._painter.getSplitPos();\n\t\tsplitPos.round();\n\n\t\t// For making splitlines appear symmetric w.r.t. headers/grid.\n\t\tvar thickup = Math.ceil(this.thickness / 2) + app.dpiScale;\n\t\tvar thickdown = Math.ceil(this.thickness / 2);\n\n\t\t// Let the lines be long enough so as to cover the map area at the\n\t\t// highest possible zoom level. This makes splitter's\n\t\t// zoom animation easier.\n\t\tvar maxZoom : number = this.map.zoomToFactor(this.map.options.maxZoom);\n\t\tvar start = new cool.Point(\n\t\t\tthis.isHoriz ? splitPos.x - thickup: 0,\n\t\t\tthis.isHoriz ? 0 : splitPos.y - thickup);\n\t\tvar end = new cool.Point(\n\t\t\tthis.isHoriz ? splitPos.x + thickdown : mapSize.x * maxZoom,\n\t\t\tthis.isHoriz ? mapSize.y * maxZoom : splitPos.y + thickdown)\n\t\t\t._round();\n\n\t\tthis.inactive = this.isHoriz ? !splitPos.x : !splitPos.y;\n\t\treturn new cool.Bounds(start, end);\n\t}\n}\n"]}