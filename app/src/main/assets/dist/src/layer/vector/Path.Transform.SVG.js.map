{"version":3,"file":"Path.Transform.SVG.js","sourceRoot":"","sources":["../../../../../../../../../browser/src/layer/vector/Path.Transform.SVG.js"],"names":[],"mappings":"AAAA,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC;IAEb;;OAEG;IACH,mBAAmB,EAAE,UAAS,KAAK;QAClC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,IAAI,EAAE,WAAW,EAAE,EAAE,CAAC,CAAC;IAC/D,CAAC;IAED;;;;OAIG;IACH,aAAa,EAAE,UAAS,KAAK,EAAE,MAAM;QACpC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,IAAI,EAAE,WAAW,EACvD,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;IACtC,CAAC;CAED,CAAC,CAAC;AAEH,CAAC,CAAC,aAAa,CAAC,OAAO,CAAC;IACvB;;OAEG;IACH,mBAAmB,EAAE,UAAS,KAAK;QAClC,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,KAAK,IAAI,EAAE;YACjC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;YACzD,OAAO;SACP;QAED,IAAI,CAAC,oBAAoB,CAAC,UAAU,YAAY;YAC/C,YAAY,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACH,aAAa,EAAE,UAAS,KAAK,EAAE,MAAM;QACpC,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,KAAK,IAAI,EAAE;YACjC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,aAAa,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAC3D,OAAO;SACP;QAED,IAAI,CAAC,oBAAoB,CAAC,UAAU,YAAY;YAC/C,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACJ,CAAC;CACD,CAAC,CAAC","sourcesContent":["L.SVG.include({\n\n\t/**\n\t * Reset transform matrix\n\t */\n\t_resetTransformPath: function(layer) {\n\t\tlayer.getPathNode(this).setAttributeNS(null, 'transform', '');\n\t},\n\n\t/**\n\t * Applies matrix transformation to SVG\n\t * @param {L.Path}         layer\n\t * @param {Array.<Number>} matrix\n\t */\n\ttransformPath: function(layer, matrix) {\n\t\tlayer.getPathNode(this).setAttributeNS(null, 'transform',\n\t\t\t'matrix(' + matrix.join(' ') + ')');\n\t}\n\n});\n\nL.SplitPanesSVG.include({\n\t/**\n\t * Reset transform matrix\n\t */\n\t_resetTransformPath: function(layer) {\n\t\tif (layer.options.fixed === true) {\n\t\t\tthis._childRenderers['fixed']._resetTransformPath(layer);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._forEachPaneRenderer(function (paneRenderer) {\n\t\t\tpaneRenderer._resetTransformPath(layer);\n\t\t});\n\t},\n\n\t/**\n\t * Applies matrix transformation to SVG\n\t * @param {L.Path}         layer\n\t * @param {Array.<Number>} matrix\n\t */\n\ttransformPath: function(layer, matrix) {\n\t\tif (layer.options.fixed === true) {\n\t\t\tthis._childRenderers['fixed'].transformPath(layer, matrix);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._forEachPaneRenderer(function (paneRenderer) {\n\t\t\tpaneRenderer.transformPath(layer, matrix);\n\t\t});\n\t}\n});\n"]}