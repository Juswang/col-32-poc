{"version":3,"file":"SplitPanesRenderer.js","sourceRoot":"","sources":["../../../../../../../../../browser/src/layer/vector/SplitPanesRenderer.js"],"names":[],"mappings":"AAAA,gCAAgC;AAChC;;;GAGG;AAEH,CAAC,CAAC,kBAAkB,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC;IAErC,OAAO,EAAE;QACR,8EAA8E;QAC9E,0FAA0F;QAC1F,OAAO,EAAE,CAAC;KACV;IAED,UAAU,EAAE,UAAU,OAAO;QAC5B,CAAC,CAAC,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC5B,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACf,CAAC;IAED,KAAK,EAAE;QACN,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,EAAE,gCAAgC,CAAC,CAAC;QAE9F,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACrB,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,sCAAsC;SAC7D;QAED,IAAI,CAAC,OAAO,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC5C,IAAI,CAAC,OAAO,EAAE,CAAC;IAChB,CAAC;IAED,QAAQ,EAAE;QACT,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACnC,CAAC;IAED,iBAAiB,EAAE;QAClB,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAC;IAC5E,CAAC;IAED,sDAAsD;IACtD,SAAS,EAAE;QACV,OAAO,EAAE,CAAC;IACX,CAAC;IAED,OAAO,EAAE;IACT,CAAC;IAED,YAAY,EAAE;QACb,OAAO,IAAI,CAAC,UAAU,CAAC;IACxB,CAAC;CACD,CAAC,CAAC","sourcesContent":["/* -*- js-indent-level: 8 -*- */\n/*\n * L.SplitPanesRenderer is a base class for split-panes renderer implementations (only SVG for now);\n * handles renderer container, bounds and zoom animation.\n */\n\nL.SplitPanesRenderer = L.Layer.extend({\n\n\toptions: {\n\t\t// how much to extend the clip area around the map view (relative to its size)\n\t\t// e.g. 0.1 would be 10% of map view in each direction; defaults to clip with the map view\n\t\tpadding: 0\n\t},\n\n\tinitialize: function (options) {\n\t\tL.setOptions(this, options);\n\t\tL.stamp(this);\n\t},\n\n\tonAdd: function () {\n\t\twindow.app.console.assert(this._map.getSplitPanesContext(), 'no split-panes context object!');\n\n\t\tif (!this._container) {\n\t\t\tthis._initContainer(); // defined by renderer implementations\n\t\t}\n\n\t\tthis.getPane().appendChild(this._container);\n\t\tthis._update();\n\t},\n\n\tonRemove: function () {\n\t\tL.DomUtil.remove(this._container);\n\t},\n\n\tsetParentRenderer: function () {\n\t\twindow.app.console.error('SplitPanesRenderer cannot be a child renderer!');\n\t},\n\n\t// All child renderers have dedicated event listeners.\n\tgetEvents: function () {\n\t\treturn {};\n\t},\n\n\t_update: function () {\n\t},\n\n\tgetContainer: function () {\n\t\treturn this._container;\n\t},\n});\n"]}