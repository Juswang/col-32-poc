{"version":3,"file":"Path.Transform.Canvas.js","sourceRoot":"","sources":["../../../../../../../../../browser/src/layer/vector/Path.Transform.Canvas.js"],"names":[],"mappings":"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","sourcesContent":["function TRUE_FN () { return true; }\n\nL.Canvas.include({\n\n\t/**\n\t* Do nothing\n\t* @param  {L.Path} layer\n\t*/\n\t_resetTransformPath: function(layer) {\n\t\tif (!this._containerCopy) return;\n\n\t\tdelete this._containerCopy;\n\n\t\tif (layer._containsPoint_) {\n\t\t\tlayer._containsPoint = layer._containsPoint_;\n\t\t\tdelete layer._containsPoint_;\n\n\t\t\tthis._requestRedraw(layer);\n\t\t}\n\t},\n\n\n\t/**\n\t* Algorithm outline:\n\t*\n\t* 1. pre-transform - clear the path out of the canvas, copy canvas state\n\t* 2. at every frame:\n\t*    2.1. save\n\t*    2.2. redraw the canvas from saved one\n\t*    2.3. transform\n\t*    2.4. draw path\n\t*    2.5. restore\n\t* 3. Repeat\n\t*\n\t* @param  {L.Path}         layer\n\t* @param  {Array.<Number>} matrix\n\t*/\n\ttransformPath: function(layer, matrix) {\n\t\tvar copy   = this._containerCopy;\n\t\tvar ctx    = this._ctx, copyCtx;\n\t\tvar m      = L.Browser.retina ? 2 : 1;\n\t\tvar bounds = this._bounds;\n\t\tvar size   = bounds.getSize();\n\t\tvar pos    = bounds.min;\n\n\t\tif (!copy) { // get copy of all rendered layers\n\t\t\tcopy = this._containerCopy = document.createElement('canvas');\n\t\t\tcopyCtx = copy.getContext('2d');\n\t\t\t// document.body.appendChild(copy);\n\n\t\t\tcopy.width  = m * size.x;\n\t\t\tcopy.height = m * size.y;\n\n\t\t\tthis._removePath(layer);\n\t\t\tthis._redraw();\n\n\t\t\tcopyCtx.translate(m * bounds.min.x, m * bounds.min.y);\n\t\t\tcopyCtx.drawImage(this._container, 0, 0);\n\t\t\tthis._initPath(layer);\n\n\t\t\t// avoid flickering because of the 'mouseover's\n\t\t\tlayer._containsPoint_ = layer._containsPoint;\n\t\t\tlayer._containsPoint  = TRUE_FN;\n\t\t}\n\n\t\tctx.save();\n\t\tctx.clearRect(pos.x, pos.y, size.x * m, size.y * m);\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\t\tctx.restore();\n\t\tctx.save();\n\n\t\tctx.drawImage(this._containerCopy, 0, 0, size.x, size.y);\n\t\tctx.transform.apply(ctx, matrix);\n\n\t\t// now draw one layer only\n\t\tthis._drawing = true;\n\t\tlayer._updatePath();\n\t\tthis._drawing = false;\n\n\t\tctx.restore();\n\t}\n\n});\n"]}